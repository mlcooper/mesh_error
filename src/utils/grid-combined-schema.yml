---
swagger: '2.0'
info:
  title: StorageGRID Management API v3
  description: 'REST API for managing StorageGRID deployments. Copyright (c) 2023
    NetApp, Inc. All Rights Reserved'
  version: '3.4'
schemes:
- https
basePath: "/api/v3"
produces:
- application/json
securityDefinitions:
  BearerToken:
    type: apiKey
    name: Authorization
    in: header
security:
- BearerToken: []
tags:
- name: objects
  description: Operations on objects and their metadata
- name: ntp-servers
  description: Operations on external NTP servers
- name: metrics
  description: Operations on metrics
- name: alarms
  description: Operations on alarms. The legacy alarm system is deprecated.
- name: deactivated-features
  description: Operations on deactivated features
- name: client-certificates
  description: Operations on client certificate configuration
- name: alerts
  description: Operations on alerts
- name: node-health
  description: Operations on node health status
- name: regions
  description: Operations on regions
- name: alert-rules
  description: Operations on alert rules
- name: s3-object-lock
  description: Operations on global S3 Object Lock settings, used to support regulatory
    compliance.
- name: groups
  description: Operations on groups
- name: snmp
  description: Operations on current SNMP configuration
- name: alert-receivers
  description: Operations on alert notification receivers (email)
- name: auth
  description: Operations on authorization
- name: endpoint-domain-names
  description: Operations on endpoint domain names
- name: config
  description: Operations on version or session information
- name: alert-history
  description: Operations on resolved alerts
- name: untrusted-client-network
  description: Operations on untrusted Client Network configuration
- name: users
  description: Operations on users
- name: audit
  description: Operations on current audit configuration
- name: node-details
  description: Operations on node details
- name: expansion-nodes
  description: Operations on expansion (node-level)
- name: expansion
  description: Operations on expansion (procedure-level)
- name: expansion-sites
  description: Operations on expansion (site-level)
- name: recovery
  description: Operations for the recovery procedure
- name: license
  description: Operations on grid license
- name: node-storage-state
  description: Operations on node storage state
- name: ilm
  description: Operations on Information Lifecycle Management
- name: alert-silences
  description: Operations on alert silences
- name: accounts
  description: Operations on accounts
- name: recovery-package
  description: Recovery package operations
- name: logs
  description: Operations for log collection
- name: grid-networks
  description: Operations on the Grid Network list
- name: dns-servers
  description: Operations on external DNS servers
- name: erasure-coding
  description: Operations on erasure-coding profiles
- name: identity-source
  description: Operations on identity sources
- name: server-certificate
  description: Operations on server certificates
- name: grid-passwords
  description: Operations for grid password management.
- name: traffic-classes
  description: Operations for traffic classifier configuration
paths:
  "/grid/object-metadata":
    post:
      tags:
      - objects
      summary: Retrieves metadata for an object
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/object-metadata-request"
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/object-metadata-get-response"
        422:
          description: validation failure, including invalid object ID or invalid
            version ID
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/ntp-servers":
    get:
      tags:
      - ntp-servers
      summary: Lists configured external NTP servers
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/get-ntp-servers-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/ntp-servers/update":
    post:
      tags:
      - ntp-servers
      summary: Change the external NTP servers used by the grid
      parameters:
      - name: forceSave
        description: update the external NTP servers without connection testing
        in: query
        type: boolean
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ntp-change-request"
      responses:
        202:
          description: NTP update procedure started. Poll GET ntp-servers for status
          schema:
            "$ref": "#/definitions/response"
        422:
          description: validation failure. Connection test failure is also a validation
            failure with error context set to base
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/metric-labels/{label}/values":
    get:
      tags:
      - metrics
      summary: Lists the values for a metric label
      parameters:
      - name: label
        in: path
        type: string
        required: true
        description: label name
        default: job
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/metrics-labels-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/metric-names":
    get:
      tags:
      - metrics
      summary: Lists all available metric names
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/metrics-names-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/metric-query":
    get:
      tags:
      - metrics
      summary: Performs an instant metric query at a single point in time
      description: 'The format of metric queries is controlled by Prometheus. See
        https://prometheus.io/docs/querying/basics

        '
      parameters:
      - name: query
        in: query
        type: string
        required: true
        description: Prometheus query string
        default: storagegrid_storage_utilization_usable_space_bytes{job="ldr"}
      - name: time
        in: query
        type: string
        format: date-time
        required: false
        description: query start, default current time (date-time)
      - name: timeout
        in: query
        type: string
        required: false
        description: timeout (duration)
        default: 120s
      responses:
        200:
          description: successfully queried
          schema:
            "$ref": "#/definitions/metrics-data-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/metric-query-range":
    get:
      tags:
      - metrics
      summary: Performs a metric query over a range of time
      description: 'The format of metric queries is controlled by Prometheus. See
        https://prometheus.io/docs/querying/basics

        '
      parameters:
      - name: query
        in: query
        type: string
        required: true
        description: Prometheus query string
        default: storagegrid_storage_utilization_usable_space_bytes{job="ldr"}
      - name: start
        in: query
        type: string
        format: date-time
        required: true
        description: query start (date-time)
        default: '2017-01-01T00:00:00.000Z'
      - name: end
        in: query
        type: string
        format: date-time
        required: true
        description: query end (date-time)
        default: '2017-01-01T00:02:00.000Z'
      - name: step
        in: query
        type: string
        required: true
        description: step width (duration)
        default: 2m
      - name: timeout
        in: query
        type: string
        required: false
        description: timeout (duration)
        default: 120s
      responses:
        200:
          description: successfully queried
          schema:
            "$ref": "#/definitions/metrics-data-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/alarms":
    get:
      tags:
      - alarms
      summary: Lists current alarms
      parameters:
      - name: includeAcknowledged
        description: if set, acknowledged alarms are also returned
        in: query
        type: boolean
      - name: limit
        description: maximum number of results
        in: query
        type: integer
        default: 25
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/list-current-alarms-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
      deprecated: true
  "/grid/health/topology":
    get:
      tags:
      - alarms
      summary: Provides the grid topology and associated health at each level
      parameters:
      - name: depth
        description: topology depth level to provide
        in: query
        type: string
        enum:
        - grid
        - site
        - node
        - component
        - subcomponent
        default: node
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/grid-health-topology-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
      deprecated: true
  "/grid/deactivated-features":
    get:
      tags:
      - deactivated-features
      summary: Retrieves the deactivated features configuration
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/deactivated-features-get-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - deactivated-features
      summary: Replaces the deactivated features configuration
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/deactivated-features-full"
      responses:
        200:
          description: successful replaced deactivated features configuration
          schema:
            "$ref": "#/definitions/deactivated-features-get-put-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/client-certificates":
    get:
      tags:
      - client-certificates
      summary: Lists all client certificates configured on the grid
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/list-client-certificates-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    post:
      tags:
      - client-certificates
      summary: Creates a client certificate
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/client-certificate"
      responses:
        201:
          description: successfully created
          schema:
            "$ref": "#/definitions/client-certificate-get-post-put-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/client-certificates/{id}":
    get:
      tags:
      - client-certificates
      summary: Retrieves a single client certificate
      parameters:
      - name: id
        in: path
        description: Client certificate ID
        required: true
        type: string
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/client-certificate-get-post-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - client-certificates
      summary: Replaces a single client certificate
      parameters:
      - name: id
        in: path
        description: Client certificate ID
        required: true
        type: string
      - name: body
        in: body
        description: The new client certificate configuration
        required: true
        schema:
          "$ref": "#/definitions/client-certificate"
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/client-certificate-get-post-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - client-certificates
      summary: Deletes a single client certificate
      parameters:
      - name: id
        in: path
        description: Client certificate ID
        required: true
        type: string
      responses:
        204:
          description: successfully deleted
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/alerts":
    get:
      tags:
      - alerts
      summary: Lists active alerts
      parameters:
      - name: include
        description: 'types of alerts to include (default: active)'
        in: query
        type: array
        default:
        - active
        items:
          type: string
          enum:
          - active
          - inhibited
          - silenced
          - unprocessed
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/alerts-list-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/node-health":
    get:
      tags:
      - node-health
      summary: Provides health details for the nodes, including alert severities and
        connection states
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/node-health-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/health":
    get:
      tags:
      - alarms
      - node-health
      summary: Gives an indication of the current health of the grid. The legacy alarms
        property will be removed in a future release.
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/grid-health-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/regions":
    get:
      tags:
      - regions
      summary: Lists configured regions
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/regions-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - regions
      summary: Change the regions used by the grid
      parameters:
      - name: body
        in: body
        required: true
        description: Region names
        schema:
          type: array
          items:
            "$ref": "#/definitions/region-name"
      responses:
        200:
          description: successful update of regions
          schema:
            "$ref": "#/definitions/regions-get-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/alert-rules":
    get:
      tags:
      - alert-rules
      summary: Lists alert rules
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/alert-rules-list-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    post:
      tags:
      - alert-rules
      summary: Creates a custom alert rule
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/alert-rule-post-body"
      responses:
        201:
          description: successfully created
          schema:
            "$ref": "#/definitions/alert-rule-get-post-put-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/alert-rules/{id}":
    get:
      tags:
      - alert-rules
      summary: Retrieves a single alert rule
      parameters:
      - name: id
        in: path
        description: Rule ID
        required: true
        type: string
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/alert-rule-get-post-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - alert-rules
      summary: Replaces a single alert rule
      parameters:
      - name: id
        in: path
        description: Rule ID
        required: true
        type: string
      - name: body
        in: body
        description: The new state of the rule. For default (non-custom) rules, you
          can only update the "enable", "expressions", and "for" properties.
        required: true
        schema:
          "$ref": "#/definitions/alert-rule"
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/alert-rule-get-post-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - alert-rules
      summary: Deletes a single custom alert rule
      parameters:
      - name: id
        in: path
        description: Rule ID
        required: true
        type: string
      responses:
        204:
          description: successfully deleted
        500:
          description: Default alert rules cannot be deleted.
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/compliance-global":
    get:
      tags:
      - s3-object-lock
      summary: Retrieves the global S3 Object Lock settings
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/compliance-global-get-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - s3-object-lock
      summary: Replaces the global S3 Object Lock settings
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/compliance-global-put-request"
      responses:
        200:
          description: successfully replaced
          schema:
            "$ref": "#/definitions/compliance-global-get-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/groups":
    get:
      tags:
      - groups
      summary: Lists Grid Administrator Groups
      parameters:
      - name: type
        description: filter by group type
        in: query
        type: string
        enum:
        - local
        - federated
      - name: limit
        description: maximum number of results
        in: query
        type: integer
        default: 25
        maximum: 500
      - name: marker
        description: marker-style pagination offset (value is Group's URN)
        in: query
        type: string
      - name: includeMarker
        description: if set, the marker element is also returned
        in: query
        type: boolean
      - name: order
        description: pagination order (desc requires marker)
        in: query
        type: string
        enum:
        - asc
        - desc
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/list-groups-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    post:
      tags:
      - groups
      summary: Creates a new Grid Administrator Group
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/post-group-request"
      responses:
        201:
          description: successfully created
          schema:
            "$ref": "#/definitions/get-post-put-group-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/groups/group/{shortName}":
    get:
      tags:
      - groups
      summary: Retrieves a local Grid Administrator Group by unique name
      parameters:
      - name: shortName
        in: path
        description: uniqueName minus prefix
        required: true
        type: string
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/get-post-put-group-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/groups/federated-group/{shortName}":
    get:
      tags:
      - groups
      summary: Retrieves a federated Grid Administrator Group by unique name
      parameters:
      - name: shortName
        in: path
        description: uniqueName minus prefix
        required: true
        type: string
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/get-post-put-group-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/groups/{id}":
    get:
      tags:
      - groups
      summary: Retrieves a single Grid Administrator Group by UUID
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        type: string
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/get-post-put-group-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - groups
      summary: Deletes a single Grid Administrator Group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        type: string
      responses:
        204:
          description: successfully deleted
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - groups
      summary: Replaces a single Grid Administrator Group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          "$ref": "#/definitions/group"
      responses:
        200:
          description: successfully replaced
          schema:
            "$ref": "#/definitions/get-post-put-group-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/snmp":
    get:
      tags:
      - snmp
      summary: Gets the SNMP configuration
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/snmp-get-put-snmp-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - snmp
      summary: Replaces the SNMP configuration
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/snmp-config"
      responses:
        200:
          description: successfully replaced
          schema:
            "$ref": "#/definitions/snmp-get-put-snmp-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/alert-receivers":
    get:
      tags:
      - alert-receivers
      summary: Lists alert notification receivers
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/list-alert-notification-receivers-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    post:
      tags:
      - alert-receivers
      summary: Creates a new alert notification receiver
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/alert-notification-receiver-post-request"
      - name: test
        description: If specified, tests the validity of the notification receiver
          and requests sending a test email. Does not save the receiver.
        in: query
        type: boolean
      - name: useSecretsFrom
        description: If specified, uses the password and client key (if set) from
          the saved receiver matching this UUID. Applicable only when "test" is also
          specified.
        in: query
        type: string
        format: uuid
      responses:
        201:
          description: successfully created
          schema:
            "$ref": "#/definitions/get-post-put-alert-notification-receiver-response"
        204:
          description: request to send test email successful
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/alert-receivers/{id}":
    get:
      tags:
      - alert-receivers
      summary: Retrieves an alert notification receiver
      parameters:
      - name: id
        in: path
        description: alert notification receiver ID
        required: true
        type: string
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/get-post-put-alert-notification-receiver-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - alert-receivers
      summary: Deletes a single alert notification receiver
      parameters:
      - name: id
        in: path
        description: alert notification receiver ID
        required: true
        type: string
      responses:
        204:
          description: successfully deleted
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - alert-receivers
      summary: Replaces a single alert notification receiver
      parameters:
      - name: id
        in: path
        description: alert notification receiver ID
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/alert-notification-receiver"
      responses:
        200:
          description: successfully replaced
          schema:
            "$ref": "#/definitions/get-post-put-alert-notification-receiver-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/authorize":
    post:
      tags:
      - auth
      summary: Get authorization token
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/credentials"
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/authorize-response"
          headers:
            Cache-Control:
              description: Indicates the time in seconds until the token expires
              type: string
            Expires:
              description: Indicates the token expiration time in RFC2616 format
              type: string
        400:
          description: Single sign-on is enabled and must be used to log in.
          schema:
            "$ref": "#/definitions/error-response"
        401:
          description: Credentials invalid.
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - auth
      summary: Delete authorization token
      responses:
        200:
          description: If SSO is enabled, Single logout (SLO) returns the URL of a
            SAML request. Issuing a GET request to this URL completes the logout and
            deletes the authorization token.
          schema:
            "$ref": "#/definitions/authorize-response-delete"
        204:
          description: successfully deleted
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/authorize-saml":
    post:
      tags:
      - auth
      summary: Get the authentication request URI for the SAML identity provider
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/authorize-saml"
      responses:
        204:
          description: request successfully received
        400:
          description: Single sign-on is not enabled.
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/saml-response":
    post:
      consumes:
        - 'multipart/form-data'
      tags:
      - auth
      summary: SAML identity provider authentication response
      parameters:
      - name: SAMLResponse
        description: SAML identity provider logout response. Required if RelayState
          is specified.
        in: formData
        required: false
        type: string
      - name: RelayState
        description: StorageGRID tenant account ID. Required if SAMLResponse is specified.
        in: formData
        required: false
        type: string
      responses:
        200:
          description: If the requested content type is application/json and the authorization
            is successful, the response body contains the authorization bearer token
            (similar to the response when SSO is not enabled).
          schema:
            "$ref": "#/definitions/authorize-response"
        302:
          description: 'If the requested content type is text/html and the authorization
            is successful, the response is a 302 redirect. The redirect Location depends
            on the RelayState parameter, as follows: If no RelayState was provided,
            redirect to the StorageGRID account selection page. If the RelayState
            is 0, redirect to the Grid Manager. Otherwise, redirect to the Tenant
            Manager.'
        400:
          description: Single sign-on is not enabled.
          schema:
            "$ref": "#/definitions/error-response"
        401:
          description: Credentials invalid.
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/domain-names":
    get:
      tags:
      - endpoint-domain-names
      summary: Lists endpoint domain names
      responses:
        200:
          description: successfully retrieved domain names
          schema:
            "$ref": "#/definitions/domain-names-get-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - endpoint-domain-names
      summary: Change the endpoint domain names
      parameters:
      - name: body
        in: body
        required: true
        description: endpoint domain names
        schema:
          type: array
          description: the list of endpoint domain names; must be valid FQDN
          items:
            type: string
          example:
          - s3.example.com
      responses:
        200:
          description: successful update of endpoint domain names
          schema:
            "$ref": "#/definitions/domain-names-get-put-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/config":
    get:
      tags:
      - config
      summary: Retrieves global configuration and token information
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/config-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/config/management":
    get:
      tags:
      - config
      summary: Retrieves the global management API and UI configuration
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/config-management-get-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - config
      summary: Changes the global management API and UI configuration
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/config-management"
      responses:
        200:
          description: successful update
          schema:
            "$ref": "#/definitions/config-management-get-put-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/config/product-version":
    get:
      tags:
      - config
      summary: Retrieves the product release version
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/product-version-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/browser-inactivity-timeout":
    get:
      tags:
      - config
      summary: Retrieves the global management browser inactivity timeout.
      responses:
        200:
          description: successful update
          schema:
            "$ref": "#/definitions/config-browser-inactivity-timeout-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - config
      summary: Changes the global management browser inactivity timeout.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/config-browser-inactivity-timeout-payload"
      responses:
        200:
          description: successful update
          schema:
            "$ref": "#/definitions/config-browser-inactivity-timeout-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/versions":
    get:
      tags:
      - config
      summary: 'Retrieves the major versions of the management API supported by the
        product release

        '
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/api-versions-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/alert-history":
    get:
      tags:
      - alert-history
      summary: Lists resolved alerts
      parameters:
      - name: name[]
        description: The unique name of one or more alert rules
        in: query
        type: array
        collectionFormat: multi
        items:
          type: string
        required: false
      - name: timeTriggeredEarliest
        description: The earliest time a resolved alert was triggered
        in: query
        type: string
        format: date-time
        required: false
      - name: timeTriggeredLatest
        description: The latest time a resolved alert was triggered
        in: query
        type: string
        format: date-time
        required: false
      - name: severity[]
        description: One or more severity levels
        in: query
        type: array
        collectionFormat: multi
        items:
          type: string
          enum:
          - minor
          - major
          - critical
      - name: node[]
        description: Node name(s)
        in: query
        type: array
        collectionFormat: multi
        items:
          type: string
        required: false
      - name: inhibited
        description: |-
          If true, only return resolved alerts that were inhibited (suppressed by another alert) during their entire lifespan.
          If false, only return resolved alerts that were not inhibited.
          If omitted, return both inhibited and uninhibited resolved alerts.
        in: query
        type: boolean
        required: false
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/alert-history-list-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/untrusted-client-network":
    get:
      tags:
      - untrusted-client-network
      summary: Gets the untrusted Client Network configuration
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/untrusted-client-network-get-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - untrusted-client-network
      summary: Replaces the untrusted Client Network configuration
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/untrusted-client-network-config"
      responses:
        200:
          description: successfully replaced
          schema:
            "$ref": "#/definitions/untrusted-client-network-get-put-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/users":
    get:
      tags:
      - users
      summary: Lists Grid Administrator Users
      parameters:
      - name: type
        description: filter by user type
        in: query
        type: string
        enum:
        - local
        - federated
      - name: limit
        description: maximum number of results
        in: query
        type: integer
        default: 25
        maximum: 500
      - name: marker
        description: marker-style pagination offset (value is User's URN)
        in: query
        type: string
      - name: includeMarker
        description: if set, the marker element is also returned
        in: query
        type: boolean
      - name: order
        description: pagination order (desc requires marker)
        in: query
        type: string
        enum:
        - asc
        - desc
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/list-users-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    post:
      tags:
      - users
      summary: Creates a new local Grid Administrator User
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/post-user-request"
      responses:
        201:
          description: successfully created
          schema:
            "$ref": "#/definitions/get-post-put-user-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/users/current-user/change-password":
    post:
      tags:
      - users
      summary: Updates the current Grid Administrator User's password
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/password-change-request"
      responses:
        204:
          description: successfully updated
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/users/user/{shortName}":
    get:
      tags:
      - users
      summary: Retrieves a local Grid Administrator User by unique name
      parameters:
      - name: shortName
        in: path
        description: uniqueName minus prefix
        required: true
        type: string
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/get-post-put-user-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/users/user/{shortName}/change-password":
    post:
      tags:
      - users
      summary: Updates a local Grid Administrator User password by unique name
      parameters:
      - name: shortName
        in: path
        description: uniqueName minus prefix
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/password-change-request"
      responses:
        204:
          description: successfully updated
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/users/federated-user/{shortName}":
    get:
      tags:
      - users
      summary: Retrieves a federated Grid Administrator User by unique name
      parameters:
      - name: shortName
        in: path
        description: uniqueName minus prefix
        required: true
        type: string
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/get-post-put-user-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/users/root":
    get:
      tags:
      - users
      summary: Retrieves the root Grid Administrator
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/get-post-put-user-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/users/root/change-password":
    post:
      tags:
      - users
      summary: Updates the root Grid Administrator password
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/password-change-request"
      responses:
        204:
          description: successfully updated
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/users/{id}":
    get:
      tags:
      - users
      summary: Retrieves a single Grid Administrator User
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        type: string
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/get-post-put-user-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - users
      summary: Deletes a single Grid Administrator User
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        type: string
      responses:
        204:
          description: successfully deleted
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - users
      summary: Replaces a single Grid Administrator User
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          "$ref": "#/definitions/user"
      responses:
        200:
          description: successfully replaced
          schema:
            "$ref": "#/definitions/get-post-put-user-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/users/{id}/change-password":
    post:
      tags:
      - users
      summary: Updates a local Grid Administrator User password by UUID
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/password-change-request"
      responses:
        204:
          description: successfully updated
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/audit":
    get:
      tags:
      - audit
      summary: Gets the audit configuration
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/audit-get-put-audit-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - audit
      summary: Replaces the audit configuration
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/audit-config"
      responses:
        200:
          description: successfully replaced
          schema:
            "$ref": "#/definitions/audit-get-put-audit-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/service-ids":
    get:
      tags:
      - node-details
      summary: Provides a mapping of node UUIDs to the associated node names, service
        IDs, and service types
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/service-ids-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/expansion/nodes":
    get:
      tags:
      - expansion-nodes
      summary: Retrieves the list of grid nodes available for expansion
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/list-nodes-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/expansion/nodes/{id}":
    get:
      tags:
      - expansion-nodes
      summary: Retrieves a grid node
      parameters:
      - name: id
        in: path
        description: node ID
        required: true
        type: string
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/get-node-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - expansion-nodes
      summary: Configures a grid node
      parameters:
      - name: id
        in: path
        description: node ID
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/node"
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/put-node-response"
        422:
          description: Validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - expansion-nodes
      summary: 'Removes a grid node from all procedures; the grid node may be added
        back in by rebooting it

        '
      parameters:
      - name: id
        in: path
        description: node ID
        required: true
        type: string
      responses:
        204:
          description: Successfully removed
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/expansion/nodes/{id}/reset":
    post:
      tags:
      - expansion-nodes
      summary: Resets a grid node's configuration and returns it back to pending state
      parameters:
      - name: id
        in: path
        description: node ID
        required: true
        type: string
      - name: body
        in: body
        schema:
          type: string
          example: Not used
      responses:
        204:
          description: successfully reset
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/expansion":
    get:
      tags:
      - expansion
      summary: Retrieves the status of the current expansion procedure
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/get-expansion-status-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - expansion
      summary: 'Cancels the expansion procedure and resets all user configuration
        of expansion grid nodes

        '
      responses:
        204:
          description: expansion procedure successfully cancelled
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/expansion/start":
    post:
      tags:
      - expansion
      summary: 'Initiates the expansion procedure, allowing configuration of the expansion
        grid nodes

        '
      parameters:
      - name: body
        in: body
        schema:
          type: string
          example: Not used
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/get-expansion-status-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/expansion/expand":
    post:
      tags:
      - expansion
      summary: Executes the expansion procedure, adding configured grid nodes to the
        grid
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/provisioning-passphrase"
      responses:
        204:
          description: execution of expansion procedure successfully started
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/expansion/sites":
    get:
      tags:
      - expansion-sites
      summary: Retrieves the list of existing and new sites (empty until expansion
        is started)
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/list-sites-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    post:
      tags:
      - expansion-sites
      summary: Adds a new site
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/post-site-request"
      responses:
        201:
          description: Successfully added
          schema:
            "$ref": "#/definitions/post-put-sites-response"
        422:
          description: Validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/expansion/sites/{id}":
    get:
      tags:
      - expansion-sites
      summary: Retrieves a site
      parameters:
      - name: id
        in: path
        description: site ID
        required: true
        type: string
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/get-sites-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - expansion-sites
      summary: Updates the details of a site
      parameters:
      - name: id
        in: path
        description: site ID
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/site"
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/post-put-sites-response"
        422:
          description: Validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - expansion-sites
      summary: Deletes a site
      parameters:
      - name: id
        in: path
        description: site ID
        required: true
        type: string
      responses:
        204:
          description: Successfully deleted
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/recovery/available-nodes":
    get:
      tags:
      - recovery
      summary: Lists grid nodes not connected to the grid
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/available-nodes-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/recovery":
    get:
      tags:
      - recovery
      summary: Gets the recovery status
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/recovery-status-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    post:
      tags:
      - recovery
      summary: Starts the recovery procedure, retrieves configuration file and installs
        software
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/post-recovery-request"
      responses:
        200:
          description: successfully started recovery procedure, retrieved configuration
            file and installed software
          schema:
            "$ref": "#/definitions/recovery-status-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - recovery
      summary: Resets the recovery procedure to the not-started state
      responses:
        204:
          description: successfully reset
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/license":
    get:
      tags:
      - license
      summary: Retrieves the grid license
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/get-license-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/license/update":
    post:
      tags:
      - license
      summary: Updates the grid license
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/license-update-request"
      responses:
        202:
          description: Grid license update procedure started. Poll GET license for
            status.
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/node-storage-state/{nodeId}":
    get:
      tags:
      - node-storage-state
      summary: Gets the state of the storage control module in the given node ID
      parameters:
      - name: nodeId
        in: path
        description: Node ID
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/storage-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - node-storage-state
      summary: Sets the desired state of the storage control module in the given node
        ID
      parameters:
      - name: nodeId
        in: path
        description: Node ID
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/storage-put-request"
      responses:
        202:
          description: Desired state for storage control module is set.
        500:
          description: Failed to set the desired state for the storage control module.
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/ilm-evaluate":
    post:
      tags:
      - ilm
      summary: Evaluates proposed ILM policy
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ilm-evaluate-request"
      responses:
        200:
          description: Successful ILM evaluation
          schema:
            "$ref": "#/definitions/ilm-evaluate-response"
        422:
          description: validation failure, including invalid object ID or invalid
            version ID
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: general error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/ilm-criteria":
    get:
      tags:
      - ilm
      summary: Lists criteria available for creating an ILM rule
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/ilm-criteria-list-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/ilm-rules":
    get:
      tags:
      - ilm
      summary: Lists ILM rules
      parameters:
      - name: include
        description: include optional information
        in: query
        type: string
        enum:
        - compliance
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/ilm-rules-list-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    post:
      tags:
      - ilm
      summary: Creates a new ILM rule
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ilm-rule-request"
      responses:
        201:
          description: successfully created
          schema:
            "$ref": "#/definitions/ilm-rule-post-put-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/ilm-rules/{id}":
    delete:
      tags:
      - ilm
      summary: Deletes an ILM rule
      parameters:
      - name: id
        in: path
        description: ILM rule ID
        required: true
        type: string
      responses:
        204:
          description: successfully deleted
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    get:
      tags:
      - ilm
      summary: Retrieves a single ILM rule
      parameters:
      - name: id
        in: path
        description: ILM rule ID
        required: true
        type: string
      - name: include
        description: include optional information
        in: query
        type: string
        enum:
        - compliance
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/ilm-rule-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - ilm
      summary: Replaces a single ILM rule
      parameters:
      - name: id
        in: path
        description: ILM rule ID
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          "$ref": "#/definitions/ilm-rule-request"
      responses:
        200:
          description: successfully replaced
          schema:
            "$ref": "#/definitions/ilm-rule-post-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/ilm-policies":
    get:
      tags:
      - ilm
      summary: Lists ILM policies
      parameters:
      - name: type
        description: filter by policy type
        in: query
        type: string
        enum:
        - proposed
        - active
        - historical
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/ilm-policies-list-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    post:
      tags:
      - ilm
      summary: Creates a proposed or active policy
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/ilm-policy-common"
      responses:
        201:
          description: successfully created
          schema:
            "$ref": "#/definitions/ilm-policy-post-put-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/ilm-policies/{id}":
    delete:
      tags:
      - ilm
      summary: Deletes a (proposed) ILM policy
      parameters:
      - name: id
        in: path
        description: ILM policy ID
        required: true
        type: string
      responses:
        204:
          description: successfully deleted
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    get:
      tags:
      - ilm
      summary: Retrieves a single ILM policy
      parameters:
      - name: id
        in: path
        description: ILM policy ID
        required: true
        type: string
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/ilm-policy-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - ilm
      summary: Replaces a proposed ILM policy and optionally activates it
      parameters:
      - name: id
        in: path
        description: ILM policy ID
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          "$ref": "#/definitions/ilm-policy"
      responses:
        200:
          description: successfully replaced
          schema:
            "$ref": "#/definitions/ilm-policy-post-put-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/alert-silences":
    get:
      tags:
      - alert-silences
      summary: Lists alert silences
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/alert-silence-list-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    post:
      tags:
      - alert-silences
      summary: Creates a new alert silence
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/alert-silence-post-request"
      responses:
        201:
          description: successfully created
          schema:
            "$ref": "#/definitions/alert-silence-get-post-put-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/alert-silences/{id}":
    get:
      tags:
      - alert-silences
      summary: Retrieves an alert silence
      parameters:
      - name: id
        in: path
        description: alert silence ID
        required: true
        type: string
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/alert-silence-get-post-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - alert-silences
      summary: Deletes a single alert silence
      parameters:
      - name: id
        in: path
        description: alert silence ID
        required: true
        type: string
      responses:
        204:
          description: successfully deleted
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - alert-silences
      summary: Replaces a single alert silence
      parameters:
      - name: id
        in: path
        description: alert silence ID
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/alert-silence"
      responses:
        200:
          description: successfully replaced
          schema:
            "$ref": "#/definitions/alert-silence-get-post-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/account-enable-s3-key-import":
    post:
      tags:
      - accounts
      summary: 'Enables the Import S3 Credentials feature on this node. Warning: Enabling
        this feature allows Grid Manager users with Change Tenant Root Password permission
        to have full access to tenant data. This feature should be disabled immediately
        after use.'
      responses:
        204:
          description: successfully enabled
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/account-disable-s3-key-import":
    post:
      tags:
      - accounts
      summary: Disables the Import S3 Credentials feature on this node.
      responses:
        204:
          description: successfully disabled
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/accounts":
    get:
      tags:
      - accounts
      summary: Lists Storage Tenant Accounts
      parameters:
      - name: limit
        description: maximum number of results
        in: query
        type: integer
        default: 25
        maximum: 500
      - name: marker
        description: marker-style pagination offset (value is Account's id)
        in: query
        type: string
      - name: includeMarker
        description: if set, the marker element is also returned
        in: query
        type: boolean
      - name: order
        description: pagination order (desc requires marker)
        in: query
        type: string
        enum:
        - asc
        - desc
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/list-accounts-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    post:
      tags:
      - accounts
      summary: Creates a new Storage Tenant Account
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/post-account-request"
      responses:
        201:
          description: successfully created
          schema:
            "$ref": "#/definitions/create-account-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/accounts-cache":
    get:
      tags:
      - accounts
      summary: Lists cached Storage Tenant Accounts
      description: Lists the tenant accounts in the cache and includes additional
        information, such as objectCount and dataBytes. Updates to tenants might take
        15 minutes to appear in cached data.
      parameters:
      - name: limit
        description: maximum number of results
        in: query
        type: integer
        default: 25
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/list-accounts-cache-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/accounts/{id}":
    get:
      tags:
      - accounts
      summary: Retrieves a single Storage Tenant Account
      parameters:
      - name: id
        in: path
        description: ID of Storage Tenant Account
        required: true
        type: string
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/get-put-account-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - accounts
      summary: Deletes a single Storage Tenant Account
      parameters:
      - name: id
        in: path
        description: ID of Storage Tenant Account
        required: true
        type: string
      responses:
        204:
          description: successfully deleted
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - accounts
      summary: Replaces a single Storage Tenant Account
      parameters:
      - name: id
        in: path
        description: ID of Storage Tenant Account
        required: true
        type: string
      - name: forceRemoveConnection
        description: If true, the grid federation connection will be removed from
          the tenant even if that connection is being used. Any tenant data that was
          replicated between grids is not deleted. You can delete this data manually,
          as required.
        in: query
        type: boolean
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/account"
      responses:
        200:
          description: successfully replaced
          schema:
            "$ref": "#/definitions/get-put-account-response"
        409:
          description: The tenant is using this connection for cross-grid replication,
            so it can't be removed. From Tenant Manager, remove the cross-grid federation
            configuration from all tenant buckets and retry.
          schema:
            "$ref": "#/definitions/error-response"
        500:
          description: Unable to determine if the buckets in the tenant are using
            any of the removed connection(s). Use 'forceRemoveConnection' to skip
            this check and remove the grid federation connection from the tenant.
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/accounts/{id}/change-password":
    post:
      tags:
      - accounts
      summary: Changes the root user password for the Storage Tenant Account
      parameters:
      - name: id
        in: path
        description: ID of Storage Tenant Account
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/change-password"
      responses:
        204:
          description: successfully changed
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/accounts/{id}/usage":
    get:
      tags:
      - accounts
      summary: Gets the storage usage information for the Storage Tenant Account
      parameters:
      - name: id
        in: path
        description: ID of Storage Tenant Account
        required: true
        type: string
      - name: strictConsistency
        in: query
        description: If true, the request fails if the results cannot be retrieved
          at a strong-global consistency. If false (default), usage information is
          retrieved at a consistency that prioritizes availability.
        type: boolean
      - name: includeBucketDetail
        in: query
        description: If true, also look up and return other details for the container
          or bucket, including consistency. Default is false. Only consistency is
          returned for Swift containers.
        type: boolean
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/account-usage-response"
        404:
          description: account does not exist
          schema:
            "$ref": "#/definitions/error-response"
        503:
          description: unable to get usage at the desired consistency level
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/accounts/{id}/replicate":
    post:
      tags:
      - accounts
      summary: Replicate the tenant account to the target grids.
      parameters:
      - name: id
        in: path
        description: ID of Storage Tenant Account
        required: true
        type: string
      responses:
        200:
          description: successfully replicated on the target grids
          schema:
            allOf:
            - "$ref": "#/definitions/response"
            - "$ref": "#/definitions/alert-metadata-response"
            - properties:
                metadata:
                  properties:
                    alerts:
                      title: Metadata alerts related to account clone retry
                      description: Messages reported when retrying cloning a tenant
                        account to a destination grid using a grid federation connection
                      items:
                        title: Alert message raised when retrying cloning an account
                          to the destination grid
                        properties:
                          severity:
                            example: warning
                          text:
                            example: The reason account clone retry failed.
                          key:
                            example: account.alert.replicate_account_failure
        404:
          description: account does not exist
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/accounts/{id}/replication-status":
    get:
      tags:
      - accounts
      summary: Gets the replication status for a tenant account
      parameters:
      - name: id
        in: path
        description: ID of Storage Tenant Account
        required: true
        type: string
      responses:
        200:
          description: successfully replicated on the target grids
          schema:
            "$ref": "#/definitions/replication-status-response"
        404:
          description: account does not exist
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/accounts/{id}/users/{user_id}/s3-access-keys":
    post:
      tags:
      - accounts
      summary: Imports S3 credentials for a given user in a tenant account
      parameters:
      - name: id
        in: path
        description: ID of Storage Tenant Account
        required: true
        type: string
      - name: user_id
        in: path
        description: ID of user in tenant account.
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/s3-access-keys-request"
      responses:
        201:
          description: successfully imported the S3 credentials for the given user
          schema:
            "$ref": "#/definitions/s3-access-keys-response"
        409:
          description: conflict resource
          schema:
            "$ref": "#/definitions/error-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/recovery-package":
    post:
      tags:
      - recovery-package
      summary: Downloads the Recovery Package
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/passphrase-post-request"
      - name: setCookie
        in: query
        type: integer
        required: false
        description: if present, a cookie named "recovery-package-download-started-{cookie_value}"
          will be sent on success
      produces:
      - application/zip
      - application/json
      responses:
        200:
          description: 'description'
          schema:
            type: file
        422:
          description: passphrase validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/logs":
    get:
      tags:
      - logs
      summary: Log collection procedure status
      responses:
        200:
          description: log collection procedure status retrieved
          schema:
            "$ref": "#/definitions/logs-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/logs/collect":
    post:
      tags:
      - logs
      summary: Start a new log collection procedure
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/log-collection-request"
      responses:
        202:
          description: log collection procedure started. Poll GET logs for status
          schema:
            "$ref": "#/definitions/response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/logs/collection":
    get:
      tags:
      - logs
      summary: Download log collection archive after procedure completes
      parameters:
      - name: setCookie
        in: query
        type: integer
        required: false
        description: if present, a cookie named "logs-package-download-started-{cookie_value}"
          will be sent on success
      produces:
      - application/zip
      - application/json
      responses:
        200:
          description: successfully downloaded
          schema:
            type: file
        404:
          description: download not available
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - logs
      summary: Deletes the previous log collection archive
      responses:
        204:
          description: successfully deleted
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/grid-networks":
    get:
      tags:
      - grid-networks
      summary: Lists the current Grid Networks
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/get-grid-network-list-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/grid-networks/update":
    post:
      tags:
      - grid-networks
      summary: Change the Grid Network list
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/grid-network-list-update-request"
      responses:
        202:
          description: 'Grid Network list update procedure started. Poll GET grid-networks
            for status

            '
          schema:
            "$ref": "#/definitions/response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/dns-servers":
    get:
      tags:
      - dns-servers
      summary: Lists configured external DNS servers
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/get-dns-servers-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - dns-servers
      summary: Change the external DNS servers used by the grid
      parameters:
      - name: body
        in: body
        required: true
        description: IP addresses of the external DNS servers
        schema:
          type: array
          items:
            "$ref": "#/definitions/dns-server"
      responses:
        200:
          description: successful update of dns servers
          schema:
            "$ref": "#/definitions/get-dns-servers-response"
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/ec-profiles":
    get:
      tags:
      - erasure-coding
      summary: Lists EC profiles
      parameters:
      - name: showDeactivated
        in: query
        description: include deactivated profiles (default is to exclude)
        type: boolean
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/ec-profile-list-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/schemes":
    get:
      tags:
      - erasure-coding
      summary: Lists EC schemes
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/ec-schemes-list-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/identity-source":
    get:
      tags:
      - identity-source
      summary: Lists Identity Sources
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/identity-source-get-put-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - identity-source
      summary: Set or update the Identity Source
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/identity-source-with-test-user"
      - name: test
        description: 'If specified, tests communication with the identity source,
          but does not modify the stored configuration. Always succeeds if "disable"
          is omitted or set to true.

          '
        in: query
        type: boolean
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/identity-source-get-put-response"
        204:
          description: communication test succeeded
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/identity-source/synchronize":
    post:
      tags:
      - identity-source
      summary: Requests that users and groups from the identity source be synchronized
        as soon as possible
      parameters:
      - name: body
        description: Ignored, leave blank
        in: body
        required: false
        schema:
          type: string
      responses:
        204:
          description: request successfully received
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/internal-ca-certificate":
    get:
      tags:
      - server-certificate
      summary: Retrieves the public CA certificate for the StorageGRID system in Privacy-Enhanced
        Mail (PEM) format.
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/internal-ca-certificate-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/management-certificate":
    get:
      tags:
      - server-certificate
      summary: Retrieves the management interface server certificate
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/certificate-retrieve-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/management-certificate/update":
    post:
      tags:
      - server-certificate
      summary: Updates the management interface server certificate
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/certificate-update-request"
      responses:
        204:
          description: Management interface server certificate updated. New client
            connections will use the new certificate.
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/storage-api-certificate":
    get:
      tags:
      - server-certificate
      summary: Retrieves the object storage API service endpoints server certificate
      responses:
        200:
          description: successfully retrieved
          schema:
            "$ref": "#/definitions/certificate-retrieve-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/storage-api-certificate/update":
    post:
      tags:
      - server-certificate
      summary: Updates the object storage API service endpoints server certificate
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/certificate-update-request"
      responses:
        204:
          description: Object storage API service endpoints server certificate updated.
            New client connections will use the new certificate.
        422:
          description: validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/node-console-passwords":
    post:
      tags:
      - grid-passwords
      summary: Retrieves the list of grid nodes and their associated console passwords.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/node-console-passwords-post-request"
      produces:
      - application/json
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/node-console-passwords-post-response"
        422:
          description: Passphrase validation failure.
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/change-provisioning-passphrase":
    get:
      tags:
      - grid-passwords
      summary: Retrieves the status of the provisioning passphrase change.
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/passphrase-get-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    post:
      tags:
      - grid-passwords
      summary: Changes the provisioning passphrase.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/change-passphrase-request"
      responses:
        202:
          description: The procedure has started. Poll GET change-provisioning-passphrase
            for status.
        422:
          description: Validation failure
          schema:
            "$ref": "#/definitions/error-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/traffic-classes":
    get:
      tags:
      - traffic-classes
      summary: Get all traffic class policy names and IDs, and which bandwidth limits
        are in use
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/traffic-classes-info-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/traffic-classes/policies":
    get:
      tags:
      - traffic-classes
      summary: Get all traffic class policy names
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/traffic-classes-policy-names-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    post:
      tags:
      - traffic-classes
      summary: Create a new traffic class policy
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/traffic-classes-policy"
      responses:
        201:
          description: Successfully created
          schema:
            "$ref": "#/definitions/traffic-classes-policy-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
  "/grid/traffic-classes/policies/{id}":
    get:
      tags:
      - traffic-classes
      summary: Get a traffic class policy by ID
      parameters:
      - name: id
        in: path
        description: Policy ID
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: 'description'
          schema:
            "$ref": "#/definitions/traffic-classes-policy-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    put:
      tags:
      - traffic-classes
      summary: Replace an existing traffic class policy
      parameters:
      - name: id
        in: path
        description: Policy ID
        required: true
        type: string
        format: uuid
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/traffic-classes-policy"
      responses:
        200:
          description: Successfully replaced
          schema:
            "$ref": "#/definitions/traffic-classes-policy-response"
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
    delete:
      tags:
      - traffic-classes
      summary: Delete a traffic class policy
      parameters:
      - name: id
        in: path
        description: Policy ID
        required: true
        type: string
        format: uuid
      responses:
        204:
          description: Successfully removed
        default:
          description: General error
          schema:
            "$ref": "#/definitions/error-response"
definitions:
  error-response:
    title: Error Response
    description: an error response format that augments the response with information
      describing the error that occurred
    type: object
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        code:
          description: the HTTP response code
          type: integer
        message:
          description: the localized error message
          "$ref": "#/definitions/localized-error"
        errors:
          description: additional error messages such as per-field errors in a validation
            failure
          type: array
          items:
            "$ref": "#/definitions/localized-error"
  localized-error:
    required:
    - text
    properties:
      text:
        description: the localized text describing the error
        type: string
      key:
        description: a unique key representing the message (for programmatic use)
        type: string
      context:
        description: the situation or field where error was triggered
        type: string
      developerMessage:
        description: additional information to aid in debugging
        type: string
  response:
    title: Response
    description: a response format that includes metadata characterizing the response's
      generation and status
    type: object
    required:
    - status
    - apiVersion
    properties:
      responseTime:
        description: the date and time when the response was generated
        type: string
        format: date-time
      status:
        description: the result of the request
        type: string
        enum:
        - success
        - error
      apiVersion:
        description: the major and minor version of the API
        type: string
        example: '3.4'
      deprecated:
        description: whether the requested API is deprecated, default false
        type: boolean
        default: false
      data:
        description: the response data for the request (required on success and optional
          on error; type and content vary by request)
  alert-metadata-response:
    title: Metadata alerts
    properties:
      metadata:
        type: object
        required:
        - alerts
        properties:
          alerts:
            title: Metadata alerts
            description: Messages reported during processing of the API request
            type: array
            items:
              title: Alert message
              type: object
              required:
              - severity
              - text
              - key
              properties:
                severity:
                  description: severity of alert message
                  type: string
                  enum:
                  - info
                  - warning
                  - error
                text:
                  description: description of the alert message
                  type: string
                key:
                  description: key for localizing the alert message
                  type: string
  object-metadata:
    title: Object Metadata
    type: object
    required:
    - id
    - name
    - container
    - objectSizeBytes
    - creationTime
    - isContainer
    - modifiedTime
    - lastAccessTime
    - locations
    - segmentation
    - encrypted
    - raw
    properties:
      id:
        title: Object UUID
        description: a unique identifier for the object; for a delete marker, it is
          the combination of container/name
        type: string
        format: uuid
        example: 00000000-0000-0000-0000-000000000000
      versionId:
        title: Version Identifier
        description: The object version ID. Objects that are not versioned have a
          null version ID
        type: string
        example: MEJGMkMyQzgtNEY5OC0xMUU3LTkzMEYtRDkyNTAwQkY5N0Mx
      accountId:
        title: Tenant Account Identifier
        description: 'the ID of the Tenant Account that uploaded the object. Objects
          uploaded by anonymous users have a null account ID; not available for a
          delete marker

          '
        type: string
        example: '44377685838227913575'
      name:
        title: Object Name
        description: 'the name of the object, including any prefixes but excluding
          the bucket or container name

          '
        type: string
        example: my-prefix/my-object.txt
      container:
        title: Container or Bucket Name
        description: the name of the Swift container or S3 bucket that contains the
          object
        type: string
        example: my-bucket
      objectSizeBytes:
        title: Object Size
        description: the original object size in bytes; not available for a delete
          marker
        type: integer
        example: 11111
      diskSizeBytes:
        title: Disk Size
        description: the amount of disk space consumed by the object; not available
          if segmented object or a delete marker
        type: integer
        example: 5555
      creationTime:
        title: Creation Time
        description: date and time when the object was uploaded; not available for
          a delete marker
        type: string
        format: date-time
      isContainer:
        title: Is Container
        description: flag for if the metadata is for a container
        type: boolean
        example: false
      modifiedTime:
        title: Modified Time
        description: date and time when the object was last modified; not available
          for a delete marker
        type: string
        format: date-time
      lastAccessTime:
        title: Last Access Time
        description: 'date and time when the object was last accessed. To use this
          option, updates to Last Access Time must be enabled for the S3 bucket or
          Swift container; not available for a delete marker

          '
        type: string
        format: date-time
      userMetadata:
        title: User-Defined Metadata
        description: key-value pairs for any user-defined metadata applied to the
          object; not available for a delete marker
        type: object
        example:
          key1:
          - multiple values, first item
          - multiple values, second item
          key2:
          - single value
        additionalProperties:
          type: array
          items:
            type: string
      tags:
        title: Tags
        description: key-value pairs for any tags applied to the object; not available
          for a delete marker
        type: object
        example:
          tag1: value1
          tag2: value2
        additionalProperties:
          type: string
      locations:
        title: Storage Locations
        description: how and where the object is stored; not available for a delete
          marker
        type: array
        items:
          "$ref": "#/definitions/object-metadata-location"
      segmentation:
        "$ref": "#/definitions/object-metadata-segmentation"
      encrypted:
        title: Encrypted
        description: object is encrypted; not available for a delete marker
        type: boolean
        default: false
      raw:
        title: Raw Metadata
        description: all object metadata in the unprocessed internal storage format
        type: object
        example:
          TYPE: CTNT
  object-metadata-get-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/object-metadata"
      required:
      - data
  object-metadata-location:
    title: Object Metadata Location
    type: object
    required:
    - type
    properties:
      type:
        title: Location Type
        description: the type of copy stored at this location
        type: string
        enum:
        - replicated
        - erasureCoded
        - cloudStoragePool
        example: replicated
      nodeId:
        title: Grid Node UUID
        description: a unique identifier for the Grid Node (replicated only)
        type: string
        format: uuid
        example: 00000000-0000-0000-0000-000000000000
      diskPath:
        title: Disk Path
        description: full path to the disk location of the object (replicated only)
        type: string
        example: "/var/local/rangedb/3/p/0B/11/4506854E3BFE29BCp"
      profileId:
        title: Erasure Coding Profile ID
        description: a unique identifier for the Erasure Coding Profile (erasure coded
          only)
        type: string
        example: '1'
      fragments:
        title: Erasure Coding Fragments
        description: the location of each erasure-coded fragment
        type: array
        items:
          "$ref": "#/definitions/object-metadata-location-fragment"
        example:
        - nodeId: 00000000-0000-0000-0000-000000000000
          type: data
        - nodeId: 11111111-1111-1111-1111-111111111111
          type: parity
      cloudStoragePoolId:
        title: Cloud Storage Pool ID
        description: The ID of the Cloud Storage Pool in which the object is stored
        type: string
        format: uuid
        example: 00000000-0000-0000-0000-000000000000
      cloudStoragePoolObjectKey:
        title: Cloud Storage Pool Object Key
        description: The key for the object in the Cloud Storage Pool
        type: string
        example: 00000000-0000-0000-0000-000000000000.somebucket
  object-metadata-location-fragment:
    title: Object Metadata Location
    type: object
    required:
    - nodeId
    - type
    - path
    properties:
      nodeId:
        title: Grid Node UUID
        description: a unique identifier for the Grid Node containing the fragment
        type: string
        format: uuid
        example: 00000000-0000-0000-0000-000000000000
      type:
        title: Fragment Type
        type: string
        enum:
        - data
        - parity
        example: data
      path:
        title: Fragment Location Path
        description: The file path on the grid node where the erasure-coded fragment
          is located
        type: string
        example: "/var/local/rangedb/0/chunk/7A5AECB7-B701-4BFD-BAD0-4A3FA80B48E7/4D2D3CED090BBA1D_*"
  object-metadata-segment:
    title: Object Segment
    type: object
    required:
    - uuid
    - sizeBytes
    properties:
      uuid:
        title: Segment ID
        description: UUID of object segment
        type: string
        format: uuid
        example: 00000000-0000-0000-0000-000000000000
      sizeBytes:
        title: Segment Data Logical Size
        description: the logical size (in bytes) of object data stored in this segment
        type: integer
        example: 1000000000
  object-metadata-segmentation:
    title: Object Segmentation
    type: object
    required:
    - totalCount
    - segments
    properties:
      totalCount:
        title: Total Segments
        description: total number of object segments
        type: integer
        example: 100
      segments:
        title: Segments List
        description: list of segments (use the optional "maxSegments" request field
          to truncate this list)
        type: array
        items:
          "$ref": "#/definitions/object-metadata-segment"
  object-metadata-request:
    title: Object Metadata Request
    type: object
    required:
    - objectId
    properties:
      maxSegments:
        title: Max Segments
        description: maximum number of segments to list if segmented object
        type: integer
        example: 100
      consistency:
        title: Consistency control
        description: Consistency to use when performing the request.
        type: string
        enum:
        - all
        - strong-global
        - strong-site
        - read-after-new-write
        - available
        example: read-after-new-write
      objectId:
        title: Object Identifier
        description: 'protocol-specific object identifier: my-bucket/my-object-key,
          my-container/my-object-name, UUID (all uppercase), CBID (all uppercase)

          '
        type: string
        example: my-bucket/my-object-key
      versionId:
        title: Version Identifier
        description: The object version ID. Use null to use the current version of
          the object or for objects that are not versioned.
        type: string
        example: MEJGMkMyQzgtNEY5OC0xMUU3LTkzMEYtRDkyNTAwQkY5N0Mx
      includeDeleteMarker:
        title: Include Delete Marker
        description: 'For S3 versioned objects only. If true and if the specified
          object version is a delete marker, the delete marker is returned. Otherwise,
          an "object not found" error is returned.

          '
        type: boolean
        example: true
  ntp-servers-alert:
    title: Alert message in the response when retrieving current NTP configuration
    type: object
    properties:
      severity:
        description: type of alert
        type: string
        enum:
        - info
        - warning
        - error
        example: info
      text:
        description: description of the alert
        type: string
        example: Update of external NTP servers list is in progress
      key:
        description: key for localizing the alert text
        type: string
        example: maintenance.ntp_servers.update_in_progress
  get-ntp-servers-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          description: the list of IP addresses of the external NTP servers
          items:
            type: string
            example: 129.6.15.30
        readOnly:
          description: true if an NTP server list update is still in progress
          type: boolean
        alerts:
          description: Only present when the current NTP configuration is in progress
            or the last configuration failed.
          type: array
          items:
            "$ref": "#/definitions/ntp-servers-alert"
      required:
      - data
  ntp-change-request:
    required:
    - passphrase
    - servers
    properties:
      passphrase:
        description: provisioning passphrase
        type: string
      servers:
        description: IP addresses of the external NTP servers
        type: array
        items:
          type: string
          example: 129.6.15.30
  metrics-data:
    required:
    - resultType
    - result
    properties:
      resultType:
        title: result type
        description: the type of query results returned
        type: string
        enum:
        - matrix
        - scalar
        - string
        - vector
        example: vector
      result:
        title: query result
        description: the result rows from the query (format depends on resultType)
        type: array
        items:
          "$ref": "#/definitions/metrics-data-result-item"
  metrics-data-get-response:
    allOf:
    - "$ref": "#/definitions/response"
    - required:
      - data
      properties:
        data:
          "$ref": "#/definitions/metrics-data"
  metrics-data-result-item:
    description: one query result row
    type: object
    example:
      metric:
        __name__: storagegrid_storage_utilization_usable_space_bytes
        instance: 1.2.3.4:9999
        job: ldr
        node_id: cfdab765-c2fe-4688-8505-b0ced28b14c5
        service: ldr
        site_id: 0f3934e4-4a32-403b-904b-b95129cf2b2d
        site_name: Data Center 1
        value:
        - 1543368384.144
        - '155352033399'
  metrics-labels:
    type: array
    items:
      type: string
      example: node
  metrics-labels-get-response:
    allOf:
    - "$ref": "#/definitions/response"
    - required:
      - data
      properties:
        data:
          "$ref": "#/definitions/metrics-labels"
  metrics-names:
    type: array
    items:
      type: string
      example: process_cpu_seconds_total
  metrics-names-get-response:
    allOf:
    - "$ref": "#/definitions/response"
    - required:
      - data
      properties:
        data:
          "$ref": "#/definitions/metrics-names"
  current-alarm:
    title: Current Alarm
    description: Alarms that are currently active in the grid.
    type: object
    required:
    - sourceId
    - severity
    - attributeCode
    - attributeIndex
    - triggerValue
    - triggerTime
    properties:
      sourceId:
        description: the Node ID or OID of the alarm source
        type: string
        example: 2.16.124.113590.2.1.401576.1.1
      severity:
        description: severity level of the alarm
        type: string
        enum:
        - critical
        - major
        - minor
        - notice
      attributeCode:
        description: the four-character code for the alarm source attribute
        type: string
        example: PSCU
      attributeIndex:
        description: multi-value attributes use the index to indicate which value
          triggered the alarm, starting at 1
        type: integer
        example: 1
      triggerValue:
        description: the attribute value at the time the alarm was triggered
        type: string
        example: '99.5'
      triggerTime:
        description: the date and time when the alarm was triggered
        type: string
        format: date-time
      acknowledgeTime:
        description: the date and time when the alarm was acknowledged, or null if
          not acknowledged
        type: string
        format: date-time
  grid-health-topology-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/health-topology-grid-level"
      required:
      - data
  list-current-alarms-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/current-alarm"
      required:
      - data
  health-topology-severity:
    title: Severity
    description: the highest current alarm severity affecting the entity or any of
      its descendants
    type: string
    enum:
    - critical
    - major
    - minor
    - notice
    - normal
    example: normal
  health-topology-state:
    title: State
    description: the connection state of the entity
    type: string
    enum:
    - connected
    - administratively-down
    - unknown
    example: connected
  health-topology-id:
    title: Id
    description: the unique id of the entity
    type: string
    format: uuid
    example: 00000000-0000-0000-0000-000000000000
  health-topology-name:
    title: Name
    description: the current name of the entity, either the unique name (default)
      or the display name
    type: string
  health-topology-unique-name:
    title: Unique name
    description: the unique name of the entity, which cannot be changed. The unique
      name is the hostname for the node level
    type: string
  health-topology-display-name:
    title: Display name
    description: the display name of the entity as defined by the user
    type: string
  health-topology-oid:
    title: OID
    description: the OID of the entity
    type: string
  health-topology-grid-level:
    title: Topology health (grid-level)
    description: Health indication for the grid-level of the grid topology.
    properties:
      id:
        "$ref": "#/definitions/health-topology-id"
      name:
        "$ref": "#/definitions/health-topology-name"
        example: My Grid
      uniqueName:
        "$ref": "#/definitions/health-topology-unique-name"
        example: MyGrid
      type:
        type: string
        enum:
        - grid
      oid:
        "$ref": "#/definitions/health-topology-oid"
        example: 2.16.124.113590.2.1.123456.1.1
      state:
        "$ref": "#/definitions/health-topology-state"
      severity:
        "$ref": "#/definitions/health-topology-severity"
      displayName:
        "$ref": "#/definitions/health-topology-display-name"
        example: MyGridDisplayName
      children:
        type: array
        items:
          "$ref": "#/definitions/health-topology-site-level"
    required:
    - id
    - name
    - uniqueName
    - type
    - oid
    - state
    - severity
  health-topology-site-level:
    title: Topology health (site-level)
    description: Health indication for the site-level of the grid topology.
    properties:
      id:
        "$ref": "#/definitions/health-topology-id"
      name:
        "$ref": "#/definitions/health-topology-name"
        example: Data Center 1
      uniqueName:
        "$ref": "#/definitions/health-topology-unique-name"
        example: DC1
      type:
        type: string
        enum:
        - site
      oid:
        "$ref": "#/definitions/health-topology-oid"
        example: 2.16.124.113590.2.1.123456.1.1.1
      state:
        "$ref": "#/definitions/health-topology-state"
      severity:
        "$ref": "#/definitions/health-topology-severity"
      displayName:
        "$ref": "#/definitions/health-topology-display-name"
        example: DC1DisplayName
      children:
        type: array
        items:
          "$ref": "#/definitions/health-topology-node-level"
    required:
    - id
    - name
    - uniqueName
    - type
    - oid
    - state
    - severity
  health-topology-node-level:
    title: Topology health (node-level)
    description: Health indication for the node-level of the grid topology.
    properties:
      id:
        "$ref": "#/definitions/health-topology-id"
      name:
        "$ref": "#/definitions/health-topology-name"
        example: Primary Admin Node
      uniqueName:
        "$ref": "#/definitions/health-topology-unique-name"
        example: DC1-ADM1
      type:
        type: string
        enum:
        - node
      oid:
        "$ref": "#/definitions/health-topology-oid"
        example: 2.16.124.113590.2.1.123456.1.1.1.1
      state:
        "$ref": "#/definitions/health-topology-state"
      severity:
        "$ref": "#/definitions/health-topology-severity"
      displayName:
        "$ref": "#/definitions/health-topology-display-name"
        example: DC1-ADM1-Display-Name
      children:
        type: array
        items:
          "$ref": "#/definitions/health-topology-component-level"
    required:
    - id
    - name
    - uniqueName
    - type
    - oid
    - state
    - severity
  health-topology-component-level:
    title: Topology health (component-level)
    description: Health indication for the component-level of the grid topology.
    properties:
      name:
        "$ref": "#/definitions/health-topology-name"
      type:
        type: string
        enum:
        - component
      oid:
        "$ref": "#/definitions/health-topology-oid"
        example: 2.16.124.113590.2.1.123456.1.1.1.1.12345678
      state:
        "$ref": "#/definitions/health-topology-state"
      severity:
        "$ref": "#/definitions/health-topology-severity"
      code:
        title: Code
        description: a four-letter code to identify the type of this component
        type: string
        example: BSSM
      children:
        type: array
        items:
          "$ref": "#/definitions/health-topology-subcomponent-level"
    required:
    - type
    - oid
    - state
    - severity
    - code
  health-topology-subcomponent-level:
    title: Topology health (subcomponent-level)
    description: Health indication for the subcomponent-level of the grid topology.
    properties:
      name:
        "$ref": "#/definitions/health-topology-name"
      type:
        type: string
        enum:
        - subcomponent
      oid:
        "$ref": "#/definitions/health-topology-oid"
        example: 2.16.124.113590.2.1.123456.1.1.1.1.12345678.100
      state:
        "$ref": "#/definitions/health-topology-state"
      severity:
        "$ref": "#/definitions/health-topology-severity"
      code:
        title: Code
        description: a four-letter code to identify the type of this subcomponent
        type: string
        example: SERV
    required:
    - type
    - oid
    - state
    - severity
    - code
  deactivated-features:
    title: deactivated features
    description: currently deactivated features
    "$ref": "#/definitions/permissions-list-except-root"
  deactivated-features-full:
    title: deactivated features full configuration
    description: grid and tenant deactivated features configuration
    type: object
    properties:
      grid:
        description: deactivated grid management permissions
        "$ref": "#/definitions/permissions-list-except-root"
      tenant:
        description: deactivated tenant management permissions
        "$ref": "#/definitions/tenant-permissions-list-except-root"
  deactivated-features-get-put-response:
    allOf:
    - "$ref": "#/definitions/response"
    - required:
      - data
    - properties:
        data:
          "$ref": "#/definitions/deactivated-features-full"
  client-certificate:
    title: Client certificate
    description: Client certificate information
    type: object
    required:
    - id
    - displayName
    - publicKey
    - allowPrometheus
    properties:
      id:
        title: Client certificate identifier
        description: A unique identifier for the client certificate
        type: string
        example: abcABC_01234-0123456789abcABCabc0123456789==
      displayName:
        title: Display name
        description: Display name of the certificate
        type: string
        example: abc123
      publicKey:
        title: Client certificate
        description: Client certificate in PEM encoding
        type: string
        example: |-
          -----BEGIN CERTIFICATE-----
          abcdefghijkl123456780ABCDEFGHIJKL
          123456/7890ABCDEFabcdefghijklABCD
          -----END CERTIFICATE-----
      allowPrometheus:
        title: Access to Prometheus
        description: Whether Prometheus access is allowed
        type: boolean
        example: true
  client-certificate-response:
    title: Client certificate response
    description: Client certificate information with expiry date
    type: object
    allOf:
    - "$ref": "#/definitions/client-certificate"
    - properties:
        expiryDate:
          title: Expiration Date
          description: The expiration date of the certificate
          type: string
          format: date-time
          example: '2020-01-01T00:00:00.000Z'
      required:
      - expiryDate
  list-client-certificates-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/client-certificate-response"
      required:
      - data
  client-certificate-get-post-put-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/client-certificate-response"
      required:
      - data
  alarm-counts:
    title: Alarm counts
    description: Number of current alarms grouped by severity level. The legacy alarm
      system is deprecated and this property will be removed in a future release.
    properties:
      critical:
        title: Critical alarms
        type: integer
        example: 0
      major:
        title: Major alarms
        type: integer
        example: 0
      minor:
        title: Minor alarms
        type: integer
        example: 0
      notice:
        title: Notice alarms
        type: integer
        example: 0
  alerts-list-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/alert"
      required:
      - data
  alert:
    title: Alert
    description: A current alert.
    type: object
    required:
    - id
    - name
    - inhibited
    - labels
    - silenced
    - startsAt
    - status
    properties:
      id:
        title: Id
        description: the alert's unique identifier
        type: string
        example: 29ceeab5f2762acb
      name:
        title: Alert name
        description: the name of the alert
        type: string
        example: Low metadata storage
      annotations:
        description: additional informational properties about the alert
        type: object
        required:
        - description
        - ruleId
        example:
          bytes_used: 309445000000
          description: The space available for storing object metadata is low.
          recommendedActions: |-
            You must add new Storage Nodes in an expansion procedure. See "Troubleshooting Low metadata storage alerts" in the instructions for monitoring and troubleshooting StorageGRID. Also see the instructions for expanding a StorageGRID system.

            Critical alert:

              1.  Stop ingesting objects.

              2.  Add Storage Nodes immediately.


            Major alert:

              Add Storage Nodes immediately.


            Minor alert:

              1.  Monitor the rate at which object metadata space is being used. Select Nodes > Storage Node > Storage, and view the Storage Used - Object Metadata graph.

              2.  Add Storage Nodes as soon as possible.
          ruleId: LowMetadataStorage
        additionalProperties:
          type: string
      inhibited:
        title: Is inhibited
        description: whether this alert is currently suppressed by another alert
        type: boolean
        example: true
      inhibitedBy:
        title: Inhibited by
        description: the ids of other alerts currently suppressing this alert
        type: array
        items:
          type: string
          example: ca8385152dae09c7
      labels:
        description: properties that classify the alert
        type: object
        required:
        - alertname
        - instance
        - job
        - severity
        properties:
          alertname:
            title: Alert name
            description: the name of the alert
            type: string
            example: Low metadata storage
          instance:
            title: Instance
            description: the grid node where this alert is occurring
            type: string
            example: DC1-S1
          job:
            title: Job
            description: the category of the alert
            type: string
            example: ldr
          service:
            title: Service
            description: the StorageGRID service associated with the alert
            type: string
            example: dds
          severity:
            title: Severity
            description: the severity level of the alert
            type: string
            enum:
            - critical
            - major
            - minor
          node_id:
            title: Node ID
            description: the id of the node where this alert is occurring
            type: string
            example: 3e262952-df8d-43bf-9d57-50e2d0ef367e
          site_id:
            title: Site ID
            description: the id of the site where this alert is occurring
            type: string
            example: 96311ea8-b2b5-4e6a-a1b1-73e2abd09b32
          site_name:
            title: Site name
            description: the name of the site where this alert is occurring
            type: string
            example: Data Center 1
        additionalProperties:
          type: string
      silenced:
        title: Is silenced
        description: whether notifications for this alert are currently suppressed
          by an active silence
        type: boolean
        example: true
      silencedBy:
        title: Silenced by
        description: silences currently suppressing the alert
        type: array
        items:
          type: string
          format: uuid
          example: dde19261-4c59-42d7-8bd3-41976b95fda6
      startsAt:
        title: Start time
        description: the time the alert was triggered
        type: string
        format: date-time
      status:
        title: Status
        description: the status of the alert
        type: string
        enum:
        - active
        - suppressed
        - unprocessed
  alert-counts:
    title: Alert counts
    description: Number of current alerts grouped by severity level.
    properties:
      critical:
        title: Critical alerts
        type: integer
        example: 0
      major:
        title: Major alerts
        type: integer
        example: 0
      minor:
        title: Minor alerts
        type: integer
        example: 0
  grid-health-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          title: Grid Health
          properties:
            alarms:
              "$ref": "#/definitions/alarm-counts"
            alerts:
              "$ref": "#/definitions/alert-counts"
            nodes:
              "$ref": "#/definitions/node-state-counts"
      required:
      - data
  node-health-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/node-health-status"
      required:
      - data
  node-health-status:
    title: Node health status
    description: Health for a node, showing connection state and most severe alert.
    properties:
      id:
        type: string
        format: uuid
        example: 00000000-0000-0000-0000-000000000000
      isPrimaryAdmin:
        type: boolean
        description: Whether this Admin Node is the primary Admin Node, or null if
          this node is not an Admin Node.
        example: false
      name:
        type: string
        example: My node
      nodeDisplayName:
        type: string
        example: nodeDisplayName
      siteId:
        type: string
        format: uuid
        example: 00000000-0000-0000-0000-000000000000
      siteName:
        type: string
        example: My site
      siteDisplayName:
        type: string
        example: site display name
      severity:
        type: string
        enum:
        - normal
        - minor
        - major
        - critical
        example: minor
      state:
        type: string
        enum:
        - administratively-down
        - connected
        - unknown
        example: connected
      type:
        type: string
        enum:
        - adminNode
        - apiGatewayNode
        - archiveNode
        - storageNode
    required:
    - id
    - name
    - siteId
    - siteName
    - state
    - severity
    - type
  node-state-counts:
    title: Node state counts
    description: Number of nodes in each state.
    properties:
      connected:
        title: Connected
        description: the normal state, indicating that the node is connected to the
          grid
        type: integer
        example: 0
      administratively-down:
        title: Administratively down
        description: 'nodes that are expectedly offline as part of the performance
          of an administrative task

          '
        type: integer
        example: 0
      unknown:
        title: Unknown
        description: nodes that are unexpectedly offline and disconnected from the
          grid
        type: integer
        example: 0
  regions-get-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          description: the list of region names configured
          items:
            "$ref": "#/definitions/region-name"
      required:
      - data
  region-name:
    type: string
    description: the name of a region, can only include letters, numbers, and hyphens
    maxLength: 32
    minLength: 2
    pattern: "[-a-zA-Z0-9]+"
    example: us-east-1
  alert-rule-post-body:
    title: Alert rule
    description: An alert rule
    type: object
    required:
    - name
    - enable
    - expressions
    - for
    - labels
    - annotations
    properties:
      name:
        title: Name
        description: the unique name of the alert rule
        type: string
        example: High node object data storage
        maxLength: 64
      enable:
        title: Is enabled
        description: whether this alert rule is enabled
        type: boolean
        example: true
      expressions:
        "$ref": "#/definitions/alert-rule-expressions"
      for:
        title: For
        description: how long one or more of the expressions in this rule must evaluate
          as true before an alert is generated
        type: string
        example: 2m
        pattern: "^\\d+[smhdwy]$"
      labels:
        description: informational properties that classify the alert
        type: object
        example:
          category: storage
        additionalProperties:
          type: string
      annotations:
        description: additional informational properties to add to the generated alert
        type: object
        required:
        - description
        properties:
          description:
            title: Description
            description: a description of the problem that is occurring; appears on
              the Alerts page and in email notifications
            type: string
            example: Object storage space is running low.
            maxLength: 128
          recommendedActions:
            title: Recommended Actions
            description: the recommended actions to take when this alert is triggered
            type: string
            example: Contact technical support.
            maxLength: 1024
        example:
          bytes_used: '{{ with printf "storagegrid_storage_utilization_data_bytes{instance=''%s''}"
            $labels.instance | query }} {{ . | first | value }} {{end}}'
          description: Object storage space is running low.
          recommendedActions: Contact technical support.
        additionalProperties:
          type: string
  alert-rule:
    allOf:
    - "$ref": "#/definitions/alert-rule-post-body"
    - type: object
      required:
      - id
      - custom
      - group
      properties:
        id:
          title: ID
          description: the unique identifier of the alert rule
          type: string
          example: HighNodeObjectDataStorage
        custom:
          title: Is custom
          description: whether this is a user-created rule (true) or a default rule
            (false)
          type: boolean
          example: true
        group:
          title: group
          description: the group used to filter alert rules for the Grid Manager UI;
            subject to change between StorageGRID releases
          type: string
          example: node_storage
        originalProperties:
          title: Original properties
          description: the default values for any modified properties; omitted for
            custom rules
          type: object
          properties:
            enable:
              title: Is enabled
              description: whether this alert rule is enabled
              type: boolean
              example: true
            expressions:
              "$ref": "#/definitions/alert-rule-expressions"
            for:
              title: For
              description: how long one or more of the expressions in this rule must
                evaluate as true before an alert is generated
              type: string
              example: 5m
              pattern: "^\\d+[smhdwy]$"
  alert-rule-expressions:
    title: expressions
    description: the Prometheus expressions to evaluate to determine whether this
      alert is triggered
    type: object
    properties:
      minor:
        title: Minor severity-level rule expression
        type: string
        example: storagegrid_storage_utilization_data_bytes / storagegrid_storage_utilization_usable_space_bytes
          > 0.5
      major:
        title: Major severity-level rule expression
        type: string
        example: storagegrid_storage_utilization_data_bytes / storagegrid_storage_utilization_usable_space_bytes
          > 0.75
      critical:
        title: Critical severity-level rule expression
        type: string
        example: storagegrid_storage_utilization_data_bytes / storagegrid_storage_utilization_usable_space_bytes
          > 0.9
  alert-rules-list-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/alert-rule"
      required:
      - data
  alert-rule-get-post-put-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/alert-rule"
      required:
      - data
  compliance-global-for-get:
    title: Global S3 Object Lock Settings
    type: object
    required:
    - complianceEnabled
    properties:
      complianceEnabled:
        title: S3 Object Lock Enabled
        description: indicates whether S3 Object Lock is enabled for the grid
        type: boolean
        example: false
      legacyComplianceEnabled:
        title: Global Compliance status
        description: Whether the global Compliance setting was previously enabled.
          Compliance is a legacy feature that was replaced by S3 Object Lock.
        type: boolean
        example: false
      createLegacyComplianceBuckets:
        title: Legacy Bucket Compliance
        description: Whether S3 tenants can create new Compliant buckets. Compliance
          is a legacy feature that was replaced by S3 Object Lock.
        type: boolean
        example: false
  compliance-global-for-put:
    title: Global S3 Object Lock Settings
    type: object
    required:
    - complianceEnabled
    properties:
      complianceEnabled:
        title: S3 Object Lock Enabled
        description: indicates whether S3 Object Lock is enabled for the grid
        type: boolean
        example: false
  compliance-global-get-put-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/compliance-global-for-get"
      required:
      - data
  compliance-global-put-request:
    "$ref": "#/definitions/compliance-global-for-put"
  policies:
    title: Policies
    description: Sets of permissions
    type: object
    properties:
      management:
        description: permissions related to the Grid Management UI/API
        "$ref": "#/definitions/policy-management"
  policy-account:
    title: Account Policy
    description: settings for the tenant account
    required:
    - useAccountIdentitySource
    - allowPlatformServices
    properties:
      useAccountIdentitySource:
        title: Use Tenant Account Identity Source
        description: whether the tenant account should configure its own identity
          source. If false, the tenant uses the grid-wide identity source.
        type: boolean
        default: true
      allowPlatformServices:
        title: Allow Platform Services
        description: whether a tenant can use platform services features such as CloudMirror.
          These features send data to an external service that is specified using
          a StorageGRID endpoint.
        type: boolean
        default: false
        example: false
      allowSelectObjectContent:
        title: Allow S3 SelectObjectContent
        description: whether a tenant can use the S3 SelectObjectContent API to filter
          and retrieve object data.
        type: boolean
        default: false
        example: false
      allowedGridFederationConnections:
        title: Allowed Grid Federation Connections
        description: Connection IDs of tenants. When specified, cross-grid replication
          of this account and the buckets in this account will be allowed.
        type: array
        items:
          type: string
          example: eb38438e-c05b-11ec-9297-549000ba143d
      quotaObjectBytes:
        title: Object Quota (bytes)
        description: the maximum number of bytes available for this tenant's objects.
          Represents a logical amount (object size), not a physical amount (size on
          disk). If null, an unlimited number of bytes is available.
        type: integer
        minimum: 1
        example: 100000000000
  permissions-list-except-root:
    type: object
    properties:
      alarmAcknowledgment:
        description: ability to acknowledge alarms
        type: boolean
      manageAlerts:
        description: ability to manage silences, alert notifications, and alert rules
        type: boolean
      otherGridConfiguration:
        description: ability to access configuration pages not covered by other permissions
        type: boolean
      gridTopologyPageConfiguration:
        description: ability to access Grid Topology configuration tabs and modify
          otherGridConfiguration pages
        type: boolean
      tenantAccounts:
        description: 'ability to add, edit, or remove tenant accounts (The deprecated
          management API v1 also uses this permission to manage tenant group policies,
          reset Swift admin passwords, and manage root user S3 access keys.)

          '
        type: boolean
      changeTenantRootPassword:
        description: 'ability to reset the root user password for tenant accounts

          '
        type: boolean
      maintenance:
        description: 'ability to perform maintenance procedures: software upgrade,
          expansion, decommission, and Recovery Package download; ability to configure
          DNS servers, NTP servers, grid license, domain names, server certificates,
          and audit; ability to collect logs; ability to list HA groups.

          '
        type: boolean
      metricsQuery:
        description: 'ability to perform custom Prometheus metrics queries

          '
        type: boolean
      activateFeatures:
        description: 'ability to reactivate features that have been deactivated via
          the deactivated-features endpoints (This permission is provided for the
          option of deactivating it for security; the deactivated-features endpoints
          require rootAccess, so it is not useful to grant this permission to groups.
          Warning: this permission itself cannot be reactivated once deactivated,
          except by technical support.)

          '
        type: boolean
        default: false
        example: false
      ilm:
        description: 'ability to add, edit, or set ILM policies, ILM rules, and EC
          profiles; ability to simulate ILM evaluation of objects on the grid

          '
        type: boolean
      objectMetadata:
        description: 'ability to look up object metadata for any object stored on
          the grid

          '
        type: boolean
      storageAdmin:
        description: 'ability to view and update settings in E-Series SANtricity System
          Manager from StorageGRID

          '
        type: boolean
  policy-management:
    title: Management Policy
    allOf:
    - "$ref": "#/definitions/permissions-list-except-root"
    - properties:
        rootAccess:
          description: full access to all grid administration features
          type: boolean
  tenant-permissions-list-except-root:
    type: object
    properties:
      manageAllContainers:
        description: ability to manage all S3 buckets or Swift containers for this
          tenant account (overrides permission settings in group or bucket policies)
        type: boolean
      manageEndpoints:
        description: ability to manage all S3 endpoints for this tenant account
        type: boolean
      manageOwnS3Credentials:
        description: ability to manage your personal S3 credentials
        type: boolean
      manageOwnContainerObjects:
        description: ability to access the Experimental S3 Console
        type: boolean
  post-group-request:
    title: Group
    description: An organizational unit for Users. Groups can be local or federated.
    required:
    - uniqueName
    properties:
      uniqueName:
        title: Unique name
        description: the machine-readable name for the Group (unique within an Account;
          must begin with group/ or federated-group/)
        type: string
        example: federated-group/developers
        maxLength: 1024
      displayName:
        title: Display name
        description: the human-readable name for the Group (required for local Groups
          and imported automatically for federated Groups)
        type: string
        example: Developers
        maxLength: 32
      managementReadOnly:
        title: Management Read Only
        description: Whether the group is read-only. Users can view settings and features
          but cannot make changes or perform operations. Local users can change their
          passwords.
        type: boolean
        example: false
      policies:
        description: Permissions for this Group
        "$ref": "#/definitions/policies"
  group:
    title: Group
    description: An organizational unit for Users. Groups can be local or federated.
    allOf:
    - "$ref": "#/definitions/post-group-request"
    - required:
      - accountId
      - id
      - federated
      - groupURN
      properties:
        accountId:
          title: Account Identifier
          description: Storage Tenant Account ID, or zero for Grid Administrators
          type: string
          example: '12345678901234567890'
        id:
          title: Id
          description: UUID for the Group (generated automatically)
          type: string
          example: 00000000-0000-0000-0000-000000000000
        federated:
          title: Federated
          description: true if the Group is federated, for example, an LDAP Group
          type: boolean
        groupURN:
          title: Group Uniform Resource Name
          description: contains the Group uniqueName and Account ID (generated automatically)
          type: string
          example: urn:sgws:identity::12345678901234567890:federated-group/developers
  list-groups-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/group"
      required:
      - data
  get-post-put-group-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/group"
      required:
      - data
  trap-destination:
    title: Protocol of SNMP trap destination
    type: object
    required:
    - type
    - host
    properties:
      type:
        description: SNMP trap destination type
        type: string
        enum:
        - trapsink
        - trap2sink
        - informsink
        - trapsess
        - informsess
      host:
        description: SNMP trap destination host
        type: string
        example: 172.16.10.100
      port:
        description: SNMP trap destination port
        type: integer
        minimum: 1
        maximum: 65535
        example: 162
      community:
        description: SNMP trap destination community (cannot be used with usmUser).
          Cannot contain whitespace.
        type: string
        maxLength: 32
        example: public
      usmUser:
        description: USM user to send notification under (cannot be used with community).
          Cannot contain whitespace.
        type: string
        minimum: 1
        maximum: 32
        example: user1
      protocol:
        description: SNMP trap destination protocol
        type: string
        enum:
        - udp
        - tcp
        default: udp
  agent-address:
    title: SNMP agent address
    type: object
    properties:
      protocol:
        description: SNMP agent address protocol
        type: string
        enum:
        - udp
        - udp6
        - tcp
        - tcp6
        example: udp
        default: udp
      network:
        description: Local network interface to bind to
        type: string
        enum:
        - grid
        - admin
        - client
        - all
        example: admin
        default: all
      port:
        description: Local port to bind to
        type: integer
        example: 161
        default: 161
        minimum: 1
        maximum: 65535
  usm-user:
    title: User-based security model user definition
    type: object
    required:
    - name
    - securityLevel
    - authProtocol
    - authPassphrase
    properties:
      name:
        description: The user name. Cannot contain whitespace.
        type: string
        minimum: 1
        maximum: 32
        example: user1
      securityLevel:
        description: The level of security
        type: string
        enum:
        - authNoPriv
        - authPriv
        example: authPriv
      authProtocol:
        description: The authentication protocol
        type: string
        enum:
        - SHA
        example: SHA
      authPassphrase:
        description: The authentication passphrase. Cannot contain whitespace.
        type: string
        minimum: 8
        maximum: 512
        example: authpass
      privProtocol:
        description: The privacy protocol
        type: string
        enum:
        - AES
        example: AES
      privPassphrase:
        description: The privacy passphrase. Cannot contain whitespace.
        type: string
        minimum: 8
        maximum: 512
        example: privpass
      authoritativeEngineId:
        description: The engine ID to use for localized key hashing. From 5 to 32
          bytes in hex. Only for use on users specified in informsess trap destinations.
        type: string
        minimum: 10
        maximum: 64
        example: '0x80001f88801933bc3f482ba75d00000000'
  snmp-config:
    title: SNMP configuration
    type: object
    properties:
      enable_snmp:
        description: Whether the SNMP agent is enabled
        type: boolean
        default: false
      community_strings:
        description: An array of SNMP community strings. Individual strings cannot
          contain whitespace.
        type: array
        maxItems: 5
        items:
          type: string
          maxLength: 32
          example: public
      rousers:
        description: USM users allowed read-only access
        type: array
        maxItems: 10
        items:
          type: string
          example: user1
      sysLocation:
        description: SNMP system location
        type: string
        example: RTP-L1-R23S10
      sysContact:
        description: SNMP system contact
        type: string
        example: storage-support@example.com
      trapcommunity:
        description: default trap community. Cannot contain whitespace.
        type: string
        maxLength: 32
        example: public
      authtrapenable:
        description: 1 - enable SNMP authentication traps, 2 - disable SNMP authentication
          traps (default)
        type: integer
        minimum: 1
        maximum: 2
        example: 2
      disable_notifications:
        description: Disable all SNMP notifications
        type: boolean
        default: false
      trap_destinations:
        description: SNMP trap destinations for V1, V2C, and Inform notifications
        type: array
        maxItems: 10
        items:
          "$ref": "#/definitions/trap-destination"
      agent_addresses:
        description: Local binding addresses for the SNMP agent.
        type: array
        maxItems: 10
        items:
          "$ref": "#/definitions/agent-address"
      usm_users:
        description: USM user definitions
        type: array
        maxItems: 10
        items:
          "$ref": "#/definitions/usm-user"
  snmp-get-put-snmp-response:
    allOf:
    - "$ref": "#/definitions/response"
    - required:
      - data
    - properties:
        data:
          "$ref": "#/definitions/snmp-config"
  container-create:
    title: S3 bucket
    description: Optional. The details for an S3 bucket. When specified, an S3 bucket
      will be created in this tenant account.
    required:
    - name
    properties:
      versioningEnabled:
        description: if true, object versioning will be enabled for the bucket.
        type: boolean
        example: true
      name:
        description: Bucket name. Must be unique across the grid and DNS compliant.
          See the instructions for using S3 for details.
        type: string
        example: bucket-1
        minLength: 3
        maxLength: 63
      region:
        description: the region for this bucket, which must already be defined (defaults
          to us-east-1 if not specified)
        type: string
        example: us-east-1
        default: us-east-1
      s3ObjectLock:
        "$ref": "#/definitions/container-s3-object-lock-settings"
  container-s3-object-lock-settings:
    description: Settings for S3 Object Lock. Cannot be used with legacy Compliance.
    required:
    - enabled
    properties:
      enabled:
        description: whether the bucket has S3 Object Lock enabled
        type: boolean
        example: false
      defaultRetentionSetting:
        "$ref": "#/definitions/container-s3-object-lock-default-retention-settings"
  container-s3-object-lock-default-retention-settings:
    description: Default retention settings for S3 Object Lock.
    required:
    - mode
    properties:
      mode:
        description: The retention mode used for new objects added to this bucket.
          Must be compliance, which means that an object version cannot be overwritten
          or deleted by any user.
        type: string
        example: compliance
      days:
        description: The length of the default retention period for new objects added
          to this bucket, in days. If provided, must be paired with retentionMode.
          Does not affect existing bucket objects or objects with their own retain-until-date
          settings.
        type: integer
        example: 365
      years:
        description: The length of the default retention period for new objects added
          to this bucket, in years. If provided, must be paired with retentionMode.
          Does not affect existing bucket objects or objects with their own retain-until-date
          settings.
        type: integer
        example: 1
  alert-notification-receiver-post-request:
    title: Alert notification receiver
    description: Creates a new alert notification receiver
    type: object
    required:
    - type
    - enable
    - smtpHost
    - smtpPort
    - fromEmail
    - toEmails
    - minimumSeverity
    properties:
      type:
        title: Receiver type
        description: the type of notification receiver
        type: string
        enum:
        - email
        example: email
      enable:
        title: Enable alert notifications
        description: whether alert notifications are sent to this receiver
        type: boolean
        default: true
      smtpHost:
        title: SMTP Host
        description: the IP address or hostname of the SMTP server
        type: string
        maxLength: 255
        example: smtp.example.com
      smtpPort:
        title: SMTP port
        description: the port to use to communicate with the SMTP server
        type: integer
        example: 25
      username:
        title: Username
        description: the username to use to authenticate with the SMTP server
        type: string
        example: smtp-user
      password:
        title: Password
        description: the password to use to authenticate with the SMTP server. Obfuscated
          in responses.
        type: string
        example: smtp-password
      fromEmail:
        title: From email address
        description: the email address that will appear in the From field of alert
          notification emails
        type: string
        maxLength: 255
        format: email
      toEmails:
        title: To email addresses
        description: the email addresses to send alert notifications to
        type: array
        items:
          type: string
          maxLength: 255
          format: email
      minimumSeverity:
        title: Minimum severity
        description: the minimum severity level for alert notifications. For example,
          "major" will not send notifications for minor alerts, but will send notifications
          for major or critical alerts.
        type: string
        enum:
        - minor
        - major
        - critical
        example: minor
      caCert:
        title: CA certificate
        description: if TLS is required, the CA certificate that will be used to verify
          the identity of the SMTP server
        type: string
        example: |-
          -----BEGIN CERTIFICATE-----
          abcdefghijkl123456780ABCDEFGHIJKL
          123456/7890ABCDEFabcdefghijklABCD
          -----END CERTIFICATE-----
      clientCert:
        title: Client certificate
        description: if a client certificate is required to verify the identity of
          the Admin Node, the PEM-encoded certificate to send to the SMTP server.
          A CA certificate must also be provided
        type: string
        example: |-
          -----BEGIN CERTIFICATE-----
          abcdefghijkl123456780ABCDEFGHIJKL
          123456/7890ABCDEFabcdefghijklABCD
          -----END CERTIFICATE-----
      clientKey:
        title: Client private key
        description: the PEM-encoded private key for the client certificate. Obfuscated
          in responses.
        type: string
        example: |-
          -----BEGIN PRIVATE KEY-----
          abcdefghijkl123456780ABCDEFGHIJKL
          123456/7890ABCDEFabcdefghijklABCD
          -----END PRIVATE KEY-----
  alert-notification-receiver:
    title: Alert notification receiver
    description: Receiver of alert notifications, such as email
    allOf:
    - "$ref": "#/definitions/alert-notification-receiver-post-request"
    - required:
      - id
    - properties:
        id:
          title: Id
          description: UUID of the alert notification receiver (generated automatically)
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
  list-alert-notification-receivers-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/alert-notification-receiver"
      required:
      - data
  get-post-put-alert-notification-receiver-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/alert-notification-receiver"
      required:
      - data
  authorize-saml:
    title: Authorize SAML
    description: SAML authorization request
    type: object
    properties:
      accountId:
        title: StorageGRID Tenant Account ID
        description: a unique identifier for the StorageGRID tenant account
        type: string
        example: '45844190160300656164'
  credentials:
    title: Credentials
    description: authentication credentials
    type: object
    required:
    - username
    - password
    properties:
      username:
        type: string
        example: MyUserName
      password:
        type: string
        example: MyPassword
      cookie:
        description: flag to ask for an authorization token in the response using
          the Set-Cookie header
        type: boolean
      csrfToken:
        description: flag to ask for a CSRF token in the response using the Set-Cookie
          header. See the Administrator Guide for more information
        type: boolean
        default: false
  authorize-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          description: authorization bearer token
          type: string
          example: 00000000-0000-0000-0000-000000000000
      required:
      - data
  authorize-response-delete:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          description: The SAML logout request URL. Issuing a GET request to this
            URL completes the logout and deletes the authorization token.
          type: string
          example: https://my.domain.com/logout
      required:
      - data
  domain-names-get-put-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          description: the list of endpoint domain names; must be valid FQDN
          items:
            type: string
          example:
          - s3.example.com
      required:
      - data
  api-versions-get-response:
    allOf:
    - "$ref": "#/definitions/response"
    - required:
      - data
      properties:
        data:
          type: array
          description: major API versions supported
          items:
            type: integer
            example: 2
  config:
    required:
    - auto-logout
    - user
    - token
    - permissions
    - restrictedPort
    properties:
      auto-logout:
        title: GUI Inactivity Timeout
        description: the timeout period for the browser session in seconds (zero for
          disabled)
        type: integer
        example: 900
      user:
        description: information about the current User
        "$ref": "#/definitions/config-user"
      token:
        description: information about the current token
        "$ref": "#/definitions/config-token"
      permissions:
        description: the management permissions of the current token
        "$ref": "#/definitions/policy-management"
      deactivatedFeatures:
        description: 'the features that are currently deactivated and thus denied
          to users with rootAccess (returned only if the current token has rootAccess)

          '
        "$ref": "#/definitions/deactivated-features"
      restrictedPort:
        title: Restricted Port
        description: whether your current connection is using a restricted port that
          allows access to Grid Management APIs (/grid) but prevents access to Tenant
          Management APIs (/org)
        type: boolean
        example: false
      hostname:
        title: Hostname
        description: the hostname of the node that you are connected to
        type: string
        example: DC1-ADM1
      isPrimaryAdmin:
        title: isPrimaryAdmin
        description: Whether the node that you are connected to is the primary Admin
          Node. Use this field with caution when you are using the grid in Load Balancer
          configuration.
        type: boolean
        example: true
  config-get-response:
    allOf:
    - "$ref": "#/definitions/response"
    - required:
      - data
      properties:
        data:
          "$ref": "#/definitions/config"
  config-token:
    title: Config Token
    required:
    - expires
    properties:
      expires:
        title: Token Expiration
        description: time when the token expires
        type: string
        format: date-time
        example: '2028-09-04T00:00:00.000Z'
  config-user:
    title: Config User
    required:
    - id
    - username
    - uniqueName
    - firstName
    - fullName
    - federated
    - managementReadOnly
    properties:
      id:
        title: Id
        description: UUID for the User (generated automatically)
        type: string
        format: uuid
        example: 00000000-0000-0000-0000-000000000000
      username:
        title: Username
        description: the username that is used to sign in
        type: string
        example: Test
        maxLength: 1024
      uniqueName:
        title: Unique Name
        description: the machine-readable name for the User (unique within an Account)
        type: string
        example: user/Test
        maxLength: 1024
      firstName:
        title: First Name
        description: the User's first name
        type: string
        example: Test
        maxLength: 32
      fullName:
        title: Full Name
        description: the human-readable name for the User
        type: string
        example: Test User
        maxLength: 128
      federated:
        title: Federated
        description: true if the User is federated, for example, an LDAP User
        type: boolean
      managementReadOnly:
        title: Management Read Only
        description: whether the user is in a read-only group.
        type: boolean
        example: false
  config-management:
    title: Global management API and UI configuration
    required:
    - minApiVersion
    properties:
      minApiVersion:
        title: Minimum Management API version supported
        description: enables or disables earlier API versions
        type: integer
        minimum: 1
        maximum: 2
        example: 2
  config-browser-inactivity-timeout-payload:
    title: Changes the global management browser inactivity timeout
    properties:
      browserInactivityTimeout:
        title: Browser inactivity timeout.
        description: The amount of time a user's browser can be inactive before they
          are signed out of the Grid Manager or Tenant Manager (null for disabled)
        type: integer
        minimum: 60
        maximum: 604800
        example: 9000
  config-management-get-put-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/config-management"
      required:
      - data
  config-browser-inactivity-timeout-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/config-browser-inactivity-timeout-payload"
      required:
      - data
  product-version:
    type: object
    required:
    - productVersion
    properties:
      productVersion:
        title: Product Version
        description: 'the product release version currently running on the Admin Node
          serving the request

          '
        type: string
        example: 10.3.0-20160614.1639.bf71535
  product-version-get-response:
    allOf:
    - "$ref": "#/definitions/response"
    - required:
      - data
      properties:
        data:
          "$ref": "#/definitions/product-version"
  resolved-alert-record:
    title: Resolved alert record
    description: A resolved alert record
    type: object
    required:
    - annotations
    - endTime
    - event
    - eventId
    - id
    - inhibited
    - labels
    - name
    - severity
    - startTime
    - status
    properties:
      eventId:
        title: Event ID
        description: Internal ID of the record
        type: integer
        example: 1
      name:
        title: Name
        description: The unique name of the alert rule that triggered the alert
        type: string
        example: Low object data storage
      instance:
        title: Instance
        description: The grid node on which this alert occurred
        type: string
        example: DC1-S1
      severity:
        title: Severity
        description: The severity level of the alert
        type: string
        example: major
        enum:
        - critical
        - major
        - minor
      event:
        title: Event
        description: The type of the event
        type: string
        example: triggered
        enum:
        - triggered
      labels:
        description: Properties that classify the alert
        type: object
        required:
        - alertname
        - job
        - severity
        properties:
          alertname:
            title: Alert name
            description: The name of the alert
            type: string
            example: Low object data storage
          instance:
            title: Instance
            description: The grid node where this alert is occurring
            type: string
            example: DC1-S1
          job:
            title: Job
            description: The category of the alert
            type: string
            example: ldr
          service:
            title: Service
            description: The StorageGRID service associated with the alert
            type: string
            example: dds
          severity:
            title: Severity
            description: The severity level of the alert
            type: string
            enum:
            - critical
            - major
            - minor
          node_id:
            title: Node ID
            description: The id of the node where this alert occurred
            type: string
            example: 3e262952-df8d-43bf-9d57-50e2d0ef367e
          site_id:
            title: Site ID
            description: The id of the site where this alert occurred
            type: string
            example: 96311ea8-b2b5-4e6a-a1b1-73e2abd09b32
          site_name:
            title: Site name
            description: The name of the site where this alert occurred
            type: string
            example: Data Center 1
      annotations:
        description: Additional informational properties about the alert
        type: object
        required:
        - description
        - recommendedActions
        properties:
          description:
            title: Description
            description: The description of the alert condition
            type: string
            example: The space available for storing object data is low.
          recommendedActions:
            title: Recommended actions
            description: Recommended actions to take to resolve the alert condition
            type: string
            example: Perform an expansion procedure.
        example:
          bytes_used: 309445000000
        additionalProperties:
          type: string
      inhibited:
        title: Inhibited
        description: Whether this alert has been suppressed by another alert for its
          entire lifespan
        type: boolean
        example: false
      status:
        title: Status
        description: The status of the alert
        type: string
        example: resolved
        enum:
        - resolved
      id:
        title: ID
        description: The fingerprint of the alert's labels
        type: string
        example: 29ceeab5f2762acb
      startTime:
        title: Start time
        description: The time when the alert was triggered
        type: string
        format: date-time
      endTime:
        title: End time
        description: The time when the alert was resolved
        type: string
        format: date-time
  alert-history-list-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/resolved-alert-record"
      required:
      - data
  node-id:
    title: Node ID
    description: A node ID
    type: string
    format: uuid
  allowed-tcp-ports:
    title: Allowed TCP Ports
    description: A list of additional TCP ports accessible on an untrusted Client
      Network.
    type: array
    items:
      type: integer
      maxItems: 5
    example:
    - 443
    - 8443
    - 9443
  node-override:
    title: Node Override
    description: An override of the allowed ports for a specific node
    type: object
    required:
    - id
    - allowedTcpPorts
    properties:
      id:
        "$ref": "#/definitions/node-id"
      allowedTcpPorts:
        "$ref": "#/definitions/allowed-tcp-ports"
  untrusted-client-network-config:
    title: Untrusted Client Network configuration
    description: Untrusted Client Networks only allow connections on load balancer
      endpoints and, optionally, specific allowed TCP ports.
    type: object
    properties:
      default:
        description: The default setting for the Client Network on nodes added to
          the grid
        type: string
        enum:
        - trusted
        - untrusted
        example: trusted
        default: trusted
      untrustedNodes:
        description: A list of nodes IDs that have untrusted Client Networks
        type: array
        items:
          "$ref": "#/definitions/node-id"
      allowedTcpPorts:
        "$ref": "#/definitions/allowed-tcp-ports"
      nodes:
        description: A list of the specific nodes that have an override of the allowed
          ports
        type: array
        items:
          "$ref": "#/definitions/node-override"
  untrusted-client-network-get-put-response:
    allOf:
    - "$ref": "#/definitions/response"
    - required:
      - data
    - properties:
        data:
          "$ref": "#/definitions/untrusted-client-network-config"
  password-change-request:
    title: Change Password
    required:
    - password
    properties:
      password:
        title: New password
        type: string
        minLength: 8
        maxLength: 32
      currentPassword:
        title: Current password
        description: required for requests that change the password of the current
          User
        type: string
        minLength: 8
        maxLength: 32
  post-user-request:
    title: User
    description: Creates a local User.
    required:
    - uniqueName
    properties:
      uniqueName:
        title: Unique name
        description: the machine-readable name for the User (unique within an Account;
          must begin with user/ or federated-user/). The portion after the slash is
          the "username" that is used to sign in
        type: string
        example: user/Test
        maxLength: 1024
      fullName:
        title: Full name
        description: the human-readable name for the User (required for local Users
          and imported automatically for federated Users)
        type: string
        example: Test User
        maxLength: 128
      memberOf:
        description: Group memberships for this User (required for local Users and
          imported automatically for federated Users)
        type: array
        items:
          type: string
          format: uuid
        example:
        - 00000000-0000-0000-0000-000000000000
      disable:
        title: Prevent login
        description: if true, the local User cannot sign in (does not apply to federated
          Users)
        type: boolean
        default: false
  user:
    title: User
    description: Users can be local or federated.
    allOf:
    - "$ref": "#/definitions/post-user-request"
    - required:
      - accountId
      - id
      - federated
      - userURN
    - properties:
        accountId:
          title: Account Identifier
          description: Storage Tenant Account ID, or zero for Grid Administrators
          type: string
          example: '0'
        id:
          title: Id
          description: UUID for the User (generated automatically)
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        federated:
          title: Federated
          description: true if the User is federated, for example, an LDAP User
          type: boolean
        userURN:
          title: User Uniform Resource Name
          description: contains the User uniqueName and Account ID (generated automatically)
          type: string
          example: urn:sgws:identity::0:user/Test
  list-users-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/user"
      required:
      - data
  get-post-put-user-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/user"
      required:
      - data
  audit-levels:
    title: audit levels
    description: levels configured for all audit categories
    required:
    - system
    - storage
    - management
    - clientReads
    - clientWrites
    - ilm
    properties:
      system:
        description: 'the level of audit message for events related to the auditing
          system itself, grid node states, grid tasks, and service backup operations.

          '
        type: string
        enum:
        - 'off'
        - error
        - normal
        - debug
      storage:
        description: 'the level of audit message for events related to object storage
          and retrievals, grid-node to grid-node transfers, validations, purges, and
          verifications.

          '
        type: string
        enum:
        - 'off'
        - error
        - normal
        - debug
      management:
        description: the level of audit message for management API operation events.
        type: string
        enum:
        - 'off'
        - error
        - normal
        - debug
      clientReads:
        description: the level of audit message for events related to client application
          requests to retrieve objects.
        type: string
        enum:
        - 'off'
        - error
        - normal
        - debug
      clientWrites:
        description: the level of audit message for events related to client application
          requests to create or modify objects.
        type: string
        enum:
        - 'off'
        - error
        - normal
        - debug
      ilm:
        description: the level of audit message for events related to ILM operations
        type: string
        enum:
        - 'off'
        - error
        - normal
        - debug
  logged-header:
    type: string
    maxLength: 255
    example: X-Forwarded-For
  audit-config:
    title: Audit configuration
    type: object
    required:
    - levels
    - loggedHeaders
    properties:
      levels:
        "$ref": "#/definitions/audit-levels"
      loggedHeaders:
        description: 'names of S3/Swift HTTP request headers to include in audit messages
          (Use a wildcard "\*" to match zero or more characters. Use the escape sequence
          "\\*" to match a literal asterisk.)

          '
        type: array
        items:
          "$ref": "#/definitions/logged-header"
  audit-get-put-audit-response:
    allOf:
    - "$ref": "#/definitions/response"
    - required:
      - data
    - properties:
        data:
          "$ref": "#/definitions/audit-config"
  s3-access-key-expires:
    title: Key expiration time
    description: The time after which the key pair will no longer be valid. Null means
      the key pair never expires.
    type: string
    format: date-time
    example: '2028-09-04T00:00:00.000Z'
  s3-access-key:
    title: S3 access key
    description: S3 credential pair information
    type: object
    required:
    - id
    - accountId
    - displayName
    - userUUID
    properties:
      id:
        title: S3 credential pair identifier
        description: A unique identifier for the S3 credential pair (automatically
          assigned when an access key is created)
        type: string
        example: abcABC_01234-0123456789abcABCabc0123456789==
      accountId:
        title: Account identifier
        description: Storage Tenant Account ID
        type: string
        example: 12345678901234567890
      displayName:
        title: Display name
        description: Obfuscated access key
        type: string
        example: "****************AB12"
      userURN:
        title: User uniform resource name
        description: Contains the user name and account ID (generated automatically)
        type: string
        example: urn:sgws:identity::12345678901234567890:root
      userUUID:
        title: User universally unique ID
        description: ID that uniquely identifies the user (generated automatically)
        type: string
        example: 00000000-0000-0000-0000-000000000000
      expires:
        "$ref": "#/definitions/s3-access-key-expires"
  s3-access-key-with-secrets:
    title: S3 access key with secrets
    description: S3 credential pair and associated user/account information
    allOf:
    - "$ref": "#/definitions/s3-access-key"
    - type: object
    - properties:
        accessKey:
          title: Access key
          description: generated automatically (returned only when generated and otherwise
            omitted)
          type: string
          example: ABCDEFabcd1234567890
        secretAccessKey:
          title: Secret access key
          description: generated automatically (returned only when generated and otherwise
            omitted)
          type: string
          example: abcABC+123456789012345678901234567890123
  service-ids-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          description: A mapping of node UUIDs.
          type: object
          example:
            00000000-0000-0000-0000-000000000000:
              node-name: DC1-S1
              services:
              - name: SSM
                id: '12345678'
                oid: 2.16.124.113590.2.1.000000.0.0.0.0.12345678
          additionalProperties:
            "$ref": "#/definitions/node-data"
      required:
      - data
  node-data:
    title: Service Data
    description: The node name and an array of mapped service details associated with
      the mapped node UUID.
    type: object
    properties:
      name:
        description: The name of the mapped node UUID.
        type: string
        example: DC1-S1
      services:
        description: Array containing mappings of service details.
        type: array
        items:
          description: Details of a service.
          properties:
            name:
              description: The service type.
              type: string
              example: SSM
            id:
              description: The service ID.
              type: string
              example: 12345678
            oid:
              description: The node OID appended by the service ID.
              type: string
              example: 2.16.124.113590.2.1.000000.0.0.0.0.12345678
          required:
          - name
          - id
          - oid
    required:
    - name
    - services
  node:
    title: Node
    description: configuration data for a grid node
    type: object
    required:
    - id
    - site
    - name
    - type
    - configured
    - networks
    properties:
      id:
        title: Node ID
        description: a unique identifier for the node (automatically assigned when
          the node is created)
        type: string
        example: 00000000-0000-0000-0000-000000000000
      site:
        title: Site ID
        description: the id of the site to which the node is assigned
        type: string
        example: 00000000-0000-0000-0000-000000000000
      name:
        title: Name
        description: the name of the node (must be a valid hostname)
        type: string
        example: StorageNode1
        maxLength: 32
        pattern: "^(?:[A-Za-z0-9]?|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$"
      ntpRole:
        title: NTP Role
        description: the NTP role assigned to the node, or null to determine automatically
        type: string
        enum:
        - primary
        - client
      hasAdc:
        title: Has ADC
        description: 'whether the grid node has an ADC (Administrative Domain Controller)
          service, or null to determine automatically; at least three Storage Nodes
          per site must contain an ADC service

          '
        type: boolean
      type:
        title: Type
        description: the node type
        type: string
        enum:
        - adminNode
        - apiGatewayNode
        - archiveNode
        - storageNode
      isPrimaryAdmin:
        title: Is Primary Admin
        description: 'whether this Admin Node is the primary Admin Node, or null if
          this node is not an Admin Node; immutable

          '
        type: boolean
      storageGrade:
        title: Storage grade ID, 0 is the default grade
        type: integer
        example: 0
      configured:
        title: Configured
        description: 'whether required properties for this node have been configured
          and the node has been added to a site

          '
        type: boolean
      networks:
        description: node networks configuration
        "$ref": "#/definitions/node-networks"
  node-expanded:
    title: Node
    description: configuration data and procedure metadata for a grid node
    allOf:
    - "$ref": "#/definitions/node"
    - required:
      - hardware
      - progress
    - properties:
        hardware:
          description: data on the physical or virtual hardware hosting the node
          "$ref": "#/definitions/hardware"
        progress:
          description: the current progress of this node
          "$ref": "#/definitions/progress"
        currentCassandraData:
          title: Current Cassandra Data Load
          description: 'The number of bytes of Cassandra data currently on the new
            Storage Node. This number and the Estimated Cassandra Data Load are used
            to calculate the progress of the Cassandra data streaming stage during
            an expansion of an existing site.

            '
          type: integer
          minimum: 0
          example: 9888888888
        estimatedCassandraData:
          title: Estimated Cassandra Data Load
          description: 'The total number of bytes of Cassandra data expected for the
            new Storage Node. This number and the Current Cassandra Data Load are
            used to calculate the progress of the Cassandra data streaming stage during
            an expansion of an existing site.

            '
          type: integer
          minimum: 0
          example: 100000000000
        siteCassandraData:
          title: Site Cassandra Data Load
          description: 'The total number of bytes of Cassandra data in the same site
            at the start of the expansion. This number is used to calculate the Estimated
            Cassandra Data Load when data streaming begins during an expansion of
            an existing site.

            '
          type: integer
          minimum: 0
          example: 300000000000
  node-networks:
    title: Node Networks
    type: object
    required:
    - grid
    properties:
      grid:
        allOf:
        - "$ref": "#/definitions/network"
        - description: 'used for all internal StorageGRID traffic (replication, for
            example) and must be globally routable where all grid nodes on the grid
            network must be able to talk to all other grid nodes

            '
      admin:
        allOf:
        - "$ref": "#/definitions/admin-network"
        - description: 'local, closed network used for maintenance and administration
            where networks are likely to be private and may not be routable between
            sites

            '
      client:
        allOf:
        - "$ref": "#/definitions/network"
        - description: 'open network used to provide access to client applications,
            enabling grid nodes to communicate with any subnet reachable through the
            local gateway

            '
  admin-network:
    allOf:
    - "$ref": "#/definitions/network"
    - type: object
      properties:
        subnets:
          description: destination subnetworks of the routes out of this interface
            in CIDR notation
          type: array
          items:
            type: string
            example: 10.20.30.0/24
  network:
    type: object
    properties:
      mac:
        title: MAC address
        description: network interface MAC address (pre-populated)
        type: string
        example: 01:23:45:67:89:ab
      ip:
        title: IP address
        description: the CIDR network address for the network interface
        type: string
        example: 172.16.10.100/24
      gateway:
        title: Gateway IP address
        description: the default gateway of the network
        type: string
        example: 172.16.10.1
      config:
        type: string
        title: The configuration state of the interface
        description: 'Describes how the interface is configured. A value of ''disabled''
          indicates that the interface is disabled. A value of ''fixed'' indicates
          that the configuration cannot be changed. A value of ''dhcp'' indicates
          that the interface is configured by DHCP. A value of ''static'' indicates
          that the interface is statically configured. Interfaces configured by DHCP
          can be changed to static and vice versa.

          '
        enum:
        - static
        - dhcp
        - fixed
        - disabled
  progress:
    type: object
    required:
    - percentage
    properties:
      stage:
        title: Stage
        description: the stage of recovery currently being run for the node
        type: object
        required:
        - text
        - key
        properties:
          text:
            title: Title
            description: the localized name of the stage
            type: string
            example: Retrieving Grid Node Configuration
          key:
            title: Key
            description: an i18n key representing the current stage
            type: string
            enum:
            - maintenance.install.steps.retrieveGridNodeConfig.name
            - maintenance.install.steps.hotfixDownload.name
            - maintenance.install.steps.configureNetworking.name
            - maintenance.install.steps.hotfixApply.name
            - maintenance.install.steps.configureServices.name
            - maintenance.install.steps.waitingForAdmin.name
            - maintenance.install.steps.synchronizeNtp.name
            - maintenance.install.steps.startDynip.name
            - maintenance.install.steps.installModeReboot.name
            - maintenance.install.steps.waitForManualSteps.name
            - maintenance.install.steps.preparingStorage.name
            - maintenance.install.steps.waitingToStartServices.name
            - maintenance.install.steps.startCassandra.name
            - maintenance.install.steps.startCassandraWithProgress.name
            - maintenance.install.steps.startAdc.name
            - maintenance.install.steps.streamingCassandra.name
            - maintenance.install.steps.streamingCassandraWithProgress.name
            - maintenance.install.steps.waitForCassandra.name
            - maintenance.install.steps.createCassandraSchema.name
            - maintenance.install.steps.expandingCassandra.name
            - maintenance.install.steps.recoverCassandra.name
            - maintenance.install.steps.startServices.name
            - maintenance.install.steps.waitForOtherGridNodes.name
            - maintenance.install.steps.waitForDownload.name
            - maintenance.install.steps.done.name
      error:
        title: Error Message
        description: an error message if a problem has occurred, otherwise null
        type: string
      percentage:
        title: Percentage
        description: the total progress percentage for this grid node
        type: integer
        example: 10
      stageProgress:
        title: Stage Progress Percentage
        description: the estimated progress percentage within the current stage
        type: number
        example: 12.3
  hardware:
    title: Hardware Details
    description: data on the physical or virtual hardware hosting the node
    type: object
    required:
    - platform
    - disks
    - progress
    properties:
      platform:
        title: Platform
        description: hardware platform
        type: string
      disks:
        title: Hard Disks
        description: the size of each hard disk attached to the grid node (in bytes)
        type: array
        items:
          type: integer
          example: 107374182400
      cpus:
        title: CPUs
        description: the number of CPUs attached to the grid node
        type: integer
        example: 8
      memory:
        title: Memory
        description: the amount of memory (RAM) attached to the grid node (in bytes)
        type: integer
        example: 25338925056
      nftSupported:
        title: Is NFT supported on the platform
        description: whether NFT is supported on the platform.
        type: boolean
      vrfSupported:
        title: VRF interface support
        description: whether virtual routing and forwarding (VRF) interfaces are supported
          on the platform.
        type: boolean
  get-node-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/node-expanded"
      required:
      - data
  put-node-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/node-expanded"
      required:
      - data
  list-nodes-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/node-expanded"
      required:
      - data
  expansion-stage-state:
    title: Expansion Stage State
    description: state of the overall stage in the expansion procedure
    type: object
    required:
    - stage
    - inProgress
    - complete
    properties:
      stage:
        title: Expansion Stage Name
        description: the name of the overall stage in the expansion procedure
        type: string
        enum:
        - installNodes
        - initial
        - cassandraNewSite
        - addNodesToGrid
        - assignStorageGrade
        - startingNodes
        - cassandraCleanup
      inProgress:
        title: In Progress
        description: whether the overall stage is in progress
        type: boolean
        example: true
      complete:
        title: Complete
        description: whether the overall stage is complete
        type: boolean
        example: false
  expansion-status:
    title: Status
    description: the current status of the expansion procedure
    type: object
    required:
    - id
    - inProgress
    - error
    - configured
    - provision
    properties:
      id:
        title: procedure ID
        description: the name of the maintenance procedure
        type: string
        enum:
        - expansion
      inProgress:
        title: In Progress
        description: true if an expansion procedure is currently being configured
          or is running
        type: boolean
        example: true
      error:
        title: Error Message
        description: an error message if a problem has occurred, otherwise null
        type: string
        example: An expansion task encountered an error and is retrying. See nms.log
          for details.
      configured:
        title: Configured
        description: whether the expansion procedure has been configured
        type: boolean
        example: true
      provision:
        title: Provisioning Status
        description: status of the provisioning operation for the expansion procedure
        type: object
        required:
        - inProgress
        properties:
          inProgress:
            title: In Progress
            description: whether the provisioning operation is in progress
            type: boolean
            example: true
          locked:
            title: Locked
            description: 'whether a new grid revision has been created and modification
              or cancellation is no longer permitted

              '
            type: boolean
            example: true
          complete:
            title: Complete
            description: whether the provisioning operation is complete
            type: boolean
            example: false
          error:
            title: Error Message
            description: an error message if a problem occurs during grid provisioning
            type: string
            example: Failed to provision the grid. See gdu-server.log for more information.
      startTime:
        title: Start Time
        description: the date and time when the expansion procedure was started
        type: string
        format: date-time
      endTime:
        title: End Time
        description: the date and time when the expansion procedure completed
        type: string
        format: date-time
      user:
        title: Initiating User
        description: the user who initiated the expansion procedure
        type: object
        required:
        - username
        - fullName
        properties:
          username:
            title: Username
            description: the unique name of the user
            type: string
            example: user/Test
          fullName:
            title: Full Name
            description: the human-readable name for the user
            type: string
            example: Test User
      stages:
        title: Expansion Stage States
        description: state of each overall stage of the expansion procedure
        type: array
        items:
          "$ref": "#/definitions/expansion-stage-state"
  get-expansion-status-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/expansion-status"
      required:
      - data
  provisioning-passphrase:
    type: object
    required:
    - passphrase
    properties:
      passphrase:
        title: Provisioning Passphrase
        description: 'the password used during maintenance procedures to make changes
          to the grid topology

          '
        type: string
        example: provision1234
  post-site-request:
    title: Site
    description: Adds a new site.
    type: object
    required:
    - name
    properties:
      name:
        title: Name
        description: the name of the site
        type: string
        example: Data Center 1
        maxLength: 32
        pattern: "(^[-A-Za-z0-9_:,.@!]+[-A-Za-z0-9_:,.@! ]*[-A-Za-z0-9_:,.@!]+$)|(^[-A-Za-z0-9_:,.@!]+$)"
  site:
    title: Site
    type: object
    allOf:
    - "$ref": "#/definitions/post-site-request"
    - required:
      - id
    - properties:
        id:
          title: Site ID
          description: a unique identifier for the site (automatically assigned when
            the site is created)
          type: string
          example: 00000000-0000-0000-0000-000000000000
  existing-site:
    title: Site
    type: object
    allOf:
    - "$ref": "#/definitions/site"
    - properties:
        existing:
          title: Existing
          description: true if this is an existing site; false/omitted if this is
            a new site
          type: boolean
          example: true
  post-put-sites-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/site"
      required:
      - data
  get-sites-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/existing-site"
      required:
      - data
  list-sites-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/existing-site"
      required:
      - data
  recovery-node:
    title: Recovery Node
    type: object
    required:
    - id
    - name
    - type
    - configured
    - networks
    - hardware
    - progress
    properties:
      id:
        title: Node ID
        description: a unique identifier for the node (automatically assigned when
          the node is created)
        type: string
        example: 00000000-0000-0000-0000-000000000000
      site:
        title: Site ID
        description: the id of the site to which the node is assigned
        type: string
        example: 00000000-0000-0000-0000-000000000000
      name:
        title: Name
        description: the name of the node (must be a valid hostname)
        type: string
        example: StorageNode1
        maxLength: 32
        pattern: "^(?:[A-Za-z0-9]?|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$"
      ntpRole:
        title: NTP Role
        description: the NTP role assigned to the node, or null to determine automatically
        type: string
        enum:
        - primary
        - client
      hasAdc:
        title: Has ADC
        description: 'whether the grid node has an ADC (Administrative Domain Controller)
          service, or null to determine automatically; at least three Storage Nodes
          per site must contain an ADC service

          '
        type: boolean
      type:
        title: Type
        description: the node type
        type: string
        enum:
        - adminNode
        - apiGatewayNode
        - archiveNode
        - storageNode
      isPrimaryAdmin:
        title: Is Primary Admin
        description: 'whether this Admin Node is the primary Admin Node, or null if
          this node is not an Admin Node; immutable

          '
        type: boolean
      configured:
        title: Configured
        description: 'whether required properties for this node have been configured
          and the node has been added to a site

          '
        type: boolean
      networks:
        description: node networks configuration
        "$ref": "#/definitions/node-networks"
      hardware:
        description: data on the physical or virtual hardware hosting the node
        "$ref": "#/definitions/hardware"
      progress:
        description: the current progress of this node
        "$ref": "#/definitions/progress"
      currentCassandraData:
        title: Current Cassandra Data Load
        description: 'The number of bytes of Cassandra data currently on the new Storage
          Node. This number and the Estimated Cassandra Data Load are used to calculate
          the progress of the Cassandra data streaming stage during an expansion of
          an existing site.

          '
        type: integer
        minimum: 0
        example: 9888888888
      estimatedCassandraData:
        title: Estimated Cassandra Data Load
        description: 'The total number of bytes of Cassandra data expected for the
          new Storage Node. This number and the Current Cassandra Data Load are used
          to calculate the progress of the Cassandra data streaming stage during an
          expansion of an existing site.

          '
        type: integer
        minimum: 0
        example: 100000000000
      siteCassandraData:
        title: Site Cassandra Data Load
        description: 'The total number of bytes of Cassandra data in the same site
          at the start of the expansion. This number is used to calculate the Estimated
          Cassandra Data Load when data streaming begins during an expansion of an
          existing site.

          '
        type: integer
        minimum: 0
        example: 300000000000
  node-state:
    title: State
    description: the connection state of the entity
    type: string
    enum:
    - connected
    - administratively-down
    - unknown
    example: unknown
  node-needing-recovery:
    title: Node
    description: wrapper for responding all available nodes for recovery
    type: object
    required:
    - oid
    - name
    - state
    - ip
    properties:
      oid:
        title: Node ID
        description: OID of a grid node
        type: string
        example: 2.16.124.113590.2.1.333944.1.1.1.2
      name:
        title: Node name
        description: display name or hostname of a grid node
        type: string
        example: StorageNode1
      state:
        "$ref": "#/definitions/node-state"
      ip:
        title: Grid Network IP
        description: node's grid network ip address
        type: string
        example: 196.107.128.1
      replacementNode:
        description: information about the replacement node
        "$ref": "#/definitions/recovery-node"
  recovery-status:
    title: status
    description: the current status of the recovery procedure
    type: object
    required:
    - id
    - inProgress
    properties:
      id:
        title: Procedure ID
        description: the name of the maintenance procedure
        type: string
        enum:
        - recovery
      inProgress:
        title: In Progress
        description: true if an recovery procedure is currently running
        type: boolean
        example: true
      startTime:
        title: Start Time
        description: the date and time when the recovery procedure was started
        type: string
        format: date-time
      user:
        title: Initiating User
        description: the user who initiated the recovery procedure
        type: object
        required:
        - username
        - fullName
        properties:
          username:
            title: Username
            description: the unique name of the user
            type: string
            example: user/Test
          fullName:
            title: Full Name
            description: the human-readable name for the user
            type: string
            example: Test User
      nodeInRecovery:
        description: information about the recovery procedure progress and the recovery
          node
        "$ref": "#/definitions/recovery-node"
      recoveredNodes:
        title: Recovered Nodes
        description: list of all grid nodes that have been recovered
        type: array
        items:
          "$ref": "#/definitions/recovered-node"
  recovered-node:
    title: Recovered Node
    description: information about the recovered node
    type: object
    required:
    - id
    - tempid
    - name
    - serverip
    - oid
    - starttime
    - endtime
    - state
    properties:
      id:
        title: Recovery ID
        description: a unique identifier for the historical recovery (automatically
          assigned when the node is recovered)
        type: string
        example: 00000000-0000-0000-0000-000000000000
      tempid:
        title: Recovered Node ID
        description: the target node's UUID
        type: string
        example: 00000000-0000-0000-0000-000000000000
      name:
        title: Name
        description: the name of the node (must be a valid hostname)
        type: string
        example: StorageNode1
        maxLength: 32
        pattern: "^(?:[A-Za-z0-9]?|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$"
      serverip:
        title: Server IP
        description: the grid network ip address for the node
        type: string
        example: 172.16.10.100
      oid:
        title: Node OID
        description: OID of a grid node
        type: string
        example: 2.16.124.113590.2.1.333944.1.1.1.2
      starttime:
        title: Start Time
        description: the date and time when the recovery procedure was started
        type: string
        format: date-time
      endtime:
        title: End Time
        description: the date and time when the recovery procedure completed
        type: string
        format: date-time
      state:
        "$ref": "#/definitions/node-state"
  available-nodes-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/node-needing-recovery"
      required:
      - data
  recovery-status-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/recovery-status"
      required:
      - data
  post-recovery-request:
    title: Recovery
    description: start a recovery procedure.
    type: object
    required:
    - id
    - ip
    - name
    - oid
    - passphrase
    properties:
      id:
        title: Node ID
        description: a random uuid assigned to the replacement node when deployed,
          not the provisioned permanent node ID
        type: string
        example: 00000000-0000-0000-0000-000000000000
      ip:
        title: IP
        description: the grid network ip address for the recovered node
        type: string
        example: 172.16.10.100
      name:
        title: Name
        description: the name of the recovered node (must be a valid hostname)
        type: string
        example: StorageNode1
        maxLength: 32
        pattern: "^(?:[A-Za-z0-9]?|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$"
      oid:
        title: Node OID
        description: OID of the recovered node
        type: string
        example: 2.16.124.113590.2.1.333944.1.1.1.2
      passphrase:
        title: Provisioning Passphrase
        description: 'the password used during recovery procedures

          '
        type: string
        example: provision1234
  license-alert:
    title: Alert message in the response when retrieving current grid license
    type: object
    properties:
      severity:
        description: type of alert
        type: string
        enum:
        - info
        - warning
        - error
        example: info
      text:
        description: description of the alert
        type: string
        example: Update of grid license is in progress
      key:
        description: key for localizing the alert text
        type: string
        example: maintenance.license.update_in_progress
  get-license-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          title: license-details
          type: object
          required:
          - systemId
          - licensePackage
          - licenseType
          - licenseSerialNumber
          - licenseCapacity
          - license
          properties:
            systemId:
              description: StorageGRID System ID
              type: string
              example: 6dbc4d61-3e4b-4b3e-924a-aa3b21593c16
            licensePackage:
              description: license package name
              type: string
              enum:
              - SG-WEBSCALE
              - SG-WHITEBOX-TB
              example: SG-WEBSCALE
            licenseType:
              description: license model type
              type: string
              example: capacity
            licenseSerialNumber:
              description: license serial number
              type: string
              example: 88-12345678
            licenseCapacity:
              description: licensed storage capacity in TB
              type: integer
              example: 15
            licenseEnd:
              description: software license end date in UTC
              type: string
              format: date
              example: '2030-12-31'
            license:
              description: grid license encoded in Base64 (RFC 4648)
              type: string
              example: "<grid license in Base64-encoding>"
            supportCapacity:
              description: licensed storage capacity covered by the support service
                in TB
              type: integer
              example: 15
            supportEnd:
              description: support service contract end date in UTC
              type: string
              format: date
              example: '2030-12-31'
        readOnly:
          description: true if a grid license update is in progress
          type: boolean
        alerts:
          description: any alerts such as when a grid license update is in progress
            or error from the last update attempt
          type: array
          items:
            "$ref": "#/definitions/license-alert"
      required:
      - data
  license-update-request:
    required:
    - passphrase
    - license
    properties:
      passphrase:
        description: provisioning passphrase
        type: string
      license:
        description: grid license encoded in Base64 (RFC 4648)
        type: string
        example: "<grid license in Base64-encoding>"
  storage-get-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          title: Storage Control module state
          type: object
          required:
          - state
          properties:
            state:
              title: State
              description: the current state of the storage control module
              type: string
              enum:
              - online
              - offline
              - read-only
  storage-put-request:
    type: object
    required:
    - state
    properties:
      state:
        title: State
        description: The desired state for the target storage control module
        type: string
        enum:
        - online
        - offline
        - read-only
  ilm-api:
    title: Object API Type
    description: "(deprecated) indicates the ILM rule filters against objects ingested
      through the listed API. If omitted, applies to all objects"
    type: string
    enum:
    - s3OrSwift
    example: s3OrSwift
  ilm-evaluate-request:
    title: ILM Evaluation Request
    description: Evaluate the specified object against the proposed or active ILM
      policy.
    type: object
    required:
    - objectId
    properties:
      api:
        description: the object API that the provided object was evaluated against
        type: string
        enum:
        - s3
        - swift
        default: s3
      objectId:
        title: Object Identifier
        description: Protocol-specific object identifier.
        type: string
        example: my-bucket/my-prefix/my-object.txt
      versionId:
        title: Version Identifier
        description: The object version ID. Objects that are not versioned have a
          null version ID
        type: string
        example: MEJGMkMyQzgtNEY5OC0xMUU3LTkzMEYtRDkyNTAwQkY5N0Mx
      now:
        title: Current Time
        description: ISO 8601 timestamp indicating that ILM evaluation should occur
          immediately.
        type: string
        format: date-time
  ilm-evaluate-response-api:
    title: ILM Evaluation Response
    description: Identifies the ILM policy rule that matched a specified object.
    type: object
    required:
    - ruleId
    properties:
      ruleId:
        title: Rule ID
        description: The ILM rule identifier as specified in the current or proposed
          ILM policy
        type: string
        example: r2
  ilm-evaluate-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/ilm-evaluate-response-api"
      required:
      - data
  ilm-filter:
    title: Filter
    type: object
    properties:
      logicalOperator:
        title: Logical Operator
        description: logical operator connecting filtering criteria when more than
          one criterion provided
        type: string
        enum:
        - and
      criteria:
        title: Matching Criteria
        description: a group of logical conditions based on object metadata
        type: array
        items:
          type: object
          title: criterion
          required:
          - metadataName
          - operator
          properties:
            userMetadata:
              description: deprecated. Indicates if the filtering metadata specified
                is user metadata
              type: boolean
              default: false
            metadataType:
              description: indicates the type of filtered metadata
              type: string
              enum:
              - user
              - system
              - tag
              default: system
              example: system
            metadataName:
              description: system metadata identifier, user metadata name, or tag
                name
              type: string
              example: objectSize
            operator:
              "$ref": "#/definitions/ilm-operator"
              example: equals
            value:
              description: entry against which the metadata values specified by metadataName
                should be compared
              type: string
              example: '1000'
  ilm-metadata:
    title: ILM Metadata
    type: object
    required:
    - id
    - type
    - operators
    properties:
      id:
        title: Metadata ID
        description: the unique identifier of the system metadata
        type: string
        example: objectSize
      type:
        title: Value Type
        description: the value type of this metadata
        type: string
        enum:
        - integer
        - string
      unit:
        title: Unit
        description: the unit for the metadata value where applicable
        type: string
        example: bytes
      operators:
        title: Operators
        description: the list of supported operators for this metadata
        type: array
        items:
          "$ref": "#/definitions/ilm-operator"
  ilm-criteria-list-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/ilm-metadata"
      required:
      - data
  ilm-operator:
    type: string
    description: used to compare the "metadataName" with the "value" string
    enum:
    - contains
    - notContains
    - equals
    - notEquals
    - startsWith
    - notStartsWith
    - endsWith
    - notEndsWith
    - exists
    - notExists
    - lessThan
    - lessThanOrEquals
    - greaterThan
    - greaterThanOrEquals
    default: equals
  ilm-placement:
    title: Placement
    type: object
    required:
    - retention
    properties:
      retention:
        title: retention
        description: specifies where and how object data that matches the ILM rule
          is stored over time
        type: object
        required:
        - after
        properties:
          after:
            description: day when object storage starts
            type: integer
            example: 0
          duration:
            description: number of days object data to be stored at the specified
              locations. Objects stored forever if null
            type: integer
            example: 30
      replicated:
        title: replicated
        description: creates replicated copies of object data; otherwise, must be
          omitted
        type: array
        items:
          type: object
          title: replicated
          required:
          - copies
          properties:
            poolId:
              description: One or more storage pools where object data is saved, specified
                as comma-separated values. Either poolId or cloudStoragePoolId is
                required.
              type: string
              example: p1,p3
            temporaryPoolId:
              description: Temporary locations are deprecated and should not be used
                for new ILM rules. If you select the Strict ingest behavior, the temporary
                location is ignored.
              type: string
              example: p2
            cloudStoragePoolId:
              description: Cloud Storage Pool where object data is saved. Cloud Storage
                Pools cannot be used in the same placement as a storage pool. Either
                poolId or cloudStoragePoolId is required.
              type: string
              example: aabbccdd-1234-5678-9000-aabbccddeeff
            copies:
              description: number of replicated copies
              type: integer
              example: 2
      erasureCoded:
        title: erasureCoded
        description: creates erasure coded copies of object data; otherwise, must
          be omitted
        type: array
        items:
          type: object
          title: erasureCoded
          required:
          - poolId
          - profileId
          properties:
            poolId:
              description: storage pool where object data is stored
              type: string
              example: p1
            profileId:
              description: erasure coding profile used. Erasure coded object data
                only
              type: string
              example: '1'
  ilm-policies-list-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/ilm-policy-with-historical-rules"
      required:
      - data
  ilm-policy:
    title: ILM Policy
    type: object
    allOf:
    - "$ref": "#/definitions/ilm-policy-common"
    - properties:
        id:
          title: Id
          description: a UUID (generated automatically)
          type: string
          format: uuid
          example: c5b6b40e-4ed6-41a9-9d07-bd25a3618517
        historical:
          title: Historical policy
          description: indicates whether the ILM policy is historical (false if omitted,
            generated automatically)
          type: boolean
          default: false
        activationTime:
          title: Activation time
          description: ISO 8601 timestamp indicating the date and time the policy
            was activated (generated automatically)
          type: string
          format: date-time
      required:
      - id
      - name
      - rules
  ilm-policy-common:
    type: object
    properties:
      name:
        title: Policy name
        description: a representative name for the ILM policy
        type: string
        maxLength: 64
        example: Make 2 Copies
      reason:
        title: Policy reason
        description: the reason the ILM policy was changed
        type: string
        maxLength: 128
        example: Make 2 Copies policy updated to use an Archive Node
      rules:
        description: A list of ILM Rule IDs, corresponding to rules that will be evaluated
          in the specified order
        type: array
        items:
          type: string
          example: r14955856581214794492
      proposed:
        title: Proposed policy
        description: indicates whether the ILM policy is proposed or active (false
          if omitted)
        type: boolean
        default: false
      defaultRule:
        title: Default rule
        description: indicates which rule is the default rule in the policy
        type: string
        example: r2
    required:
    - name
    - rules
    - defaultRule
  ilm-policy-with-historical-rules:
    title: ILM Policy
    type: object
    allOf:
    - "$ref": "#/definitions/ilm-policy"
    - properties:
        historicalRules:
          description: list of rule definitions at the time they were added to a policy,
            if they differ from the current definitions
          type: array
          items:
            "$ref": "#/definitions/ilm-rule-with-compliance-details"
  ilm-policy-get-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/ilm-policy-with-historical-rules"
      required:
      - data
  ilm-policy-post-put-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/ilm-policy"
      required:
      - data
  ilm-rule-with-compliance-details:
    title: ILM Rule
    type: object
    allOf:
    - "$ref": "#/definitions/ilm-rule-put-post"
    - properties:
        complianceCompatible:
          title: Compliant
          description: when requested via include parameter, indicates whether the
            rule satisfies the requirements of a legacy compliant or S3 Object Lock
            bucket
          type: boolean
          example: false
      required:
      - displayName
      - id
      - version
  ilm-rule-put-post:
    title: ILM Rule
    type: object
    allOf:
    - "$ref": "#/definitions/ilm-rule-common"
    - properties:
        id:
          title: Rule ID
          type: string
          example: r1
        version:
          title: Rule Version
          type: string
          example: '2.0'
        schemaVersion:
          title: Rule Schema Version
          description: omitted for rules created prior to StorageGRID 10.3
          type: string
          example: '1.0'
        displayName:
          title: Display Name
          description: a representative and unique name for the ILM rule, immutable
            once the ILM rule is created
          type: string
          maxLength: 64
          example: Make 2 Copies
        description:
          title: Rule Description
          description: the description of the ILM rule
          type: string
          maxLength: 64
          example: Default rule to make 2 copies for all objects.
        active:
          title: Active Rule
          description: when requested via include parameter, indicates whether or
            not the ILM rule is currently used in an active ILM policy
          type: boolean
          default: false
        proposed:
          title: Proposed Rule
          description: when requested via include parameter, indicates whether or
            not the ILM rule is currently proposed for the active ILM policy
          type: boolean
          default: false
        permissions:
          title: Permissions
          description: when requested via include parameter, a list of allowed operations
            for this ILM rule
          type: array
          items:
            "$ref": "#/definitions/ilm-rule-permissions"
          example:
          - clone
          - delete
      required:
      - displayName
      - id
      - version
  ilm-rule-common:
    type: object
    required:
    - referenceTime
    - filters
    - placements
    properties:
      ingestBehavior:
        title: Ingest Behavior
        description: how objects matching this rule are stored on ingest. 'dual-commit'
          creates interim copies and applies the rule later. 'strict' and 'balanced'
          immediately create the copies specified in the rule’s day 0 instructions.
          'balanced' uses 'dual-commit' if following the rule instructions is not
          possible.
        type: string
        enum:
        - strict
        - balanced
        - dual-commit
        default: dual-commit
        example: balanced
      tenantAccountId:
        title: Tenant Account ID
        description: One or more S3 or Swift tenant account IDs to which the ILM rule
          applies, specified as comma-separated values. If omitted, applies to all
          objects.
        type: string
        example: '12345678901234567890,98765432109876543210'
      bucketFilter:
        title: Bucket Filter
        description: S3 or Swift bucket(s) to which the ILM rule applies. If omitted,
          matches all objects in any specified tenant accounts
        type: object
        required:
        - operator
        - value
        properties:
          operator:
            description: operator used to match bucket(s) with the value
            type: string
            enum:
            - contains
            - endsWith
            - equals
            - startsWith
            example: equals
          value:
            description: string value used to match bucket(s) with the specified operator
            type: string
            example: my-bucket
      api:
        "$ref": "#/definitions/ilm-api"
      referenceTime:
        title: Reference Time
        description: indicates the time from which the ILM rule is applied
        type: string
        enum:
        - ingestTime
        - lastAccessTime
        - noncurrentTime
        - userDefinedCreationTime
        default: ingestTime
      logicalOperator:
        title: Logical Operator
        description: logical operator connecting filter criterion. Mandatory if ILM
          rule has more than one filter
        type: string
        enum:
        - or
      filters:
        description: filtering criteria used to determine if the ILM rule shall be
          applied to the evaluated object. An ILM rule without filters applies to
          all objects
        type: array
        items:
          "$ref": "#/definitions/ilm-filter"
      placements:
        description: specifies where and how object data that matches the ILM rule
          is stored
        type: array
        items:
          "$ref": "#/definitions/ilm-placement"
  ilm-rule-get-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/ilm-rule-with-compliance-details"
      required:
      - data
  ilm-rule-post-put-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/ilm-rule-put-post"
      required:
      - data
  ilm-rule-permissions:
    type: string
    title: operation
    enum:
    - delete
    - edit
  ilm-rule-request:
    title: ILM Rule
    type: object
    allOf:
    - "$ref": "#/definitions/ilm-rule-common"
    - properties:
        displayName:
          title: Display Name
          description: a representative and unique name for the ILM rule, immutable
            once the ILM rule is created
          type: string
          maxLength: 64
          example: Make 2 Copies
        description:
          title: Rule Description
          description: a short description of the ILM rule to indicate its purpose
          type: string
          maxLength: 64
          example: Default rule to make 2 copies for all objects.
      required:
      - displayName
  ilm-rules-list-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/ilm-rule-with-compliance-details"
      required:
      - data
  alert-silence-matcher:
    title: Alert silence matcher
    description: a name/value pair used to match one of the alert's labels
    type: object
    required:
    - name
    - value
    properties:
      name:
        title: Name
        description: the name in the name/value pair, which must match the label's
          name
        type: string
        maxLength: 32
        example: alertname
      value:
        title: Value
        description: the value in the name/value pair, which must match the label's
          value
        type: string
        maxLength: 64
        example: HighNodeObjectDataStorage
  alert-silence-post-request:
    title: Alert silence
    description: Creates a new alert silence
    type: object
    required:
    - endTime
    - maximumSeverity
    - matchers
    properties:
      endTime:
        title: End time
        description: the time the silence will stop suppressing notifications
        type: string
        format: date-time
      comment:
        title: Comment
        description: a comment to describe the silence
        type: string
        maxLength: 256
        example: Extra disk drives ordered.
      maximumSeverity:
        title: Maximum Severity
        description: the maximum severity level for silences. For example, "major"
          will silence minor and major alerts, but will not silence critical alerts.
        type: string
        enum:
        - minor
        - major
        - critical
        example: major
      matchers:
        title: Matchers
        description: Optionally, one or more name/value pairs used to match an alert's
          labels. An alert is silenced if all specified name/value pairs match its
          labels. If no name/value pairs are specified, all alerts are silenced, based
          on the other filtering criteria.
        type: array
        items:
          "$ref": "#/definitions/alert-silence-matcher"
  alert-silence:
    title: Alert silence
    description: A silence to suppress matched alerts
    allOf:
    - required:
      - id
      - startTime
      properties:
        id:
          title: Id
          description: UUID of the alert silence (generated automatically)
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        startTime:
          title: Start time
          description: the start time for the silence; set to the current time and
            cannot be changed.
          type: string
          format: date-time
    - "$ref": "#/definitions/alert-silence-post-request"
  alert-silence-list-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/alert-silence"
      required:
      - data
  alert-silence-get-post-put-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/alert-silence"
      required:
      - data
  account-no-id:
    title: Storage Tenant Account (Organization)
    description: This is the primary unit of tenancy.
    type: object
    properties:
      name:
        title: Display Name
        description: the descriptive name specified for the account (This name is
          for display only and might not be unique.)
        type: string
        maxLength: 64
        example: Widgets Unlimited
      description:
        title: Description
        description: Additional identifying information for the tenant account, such
          as an email address. This information is not shown in the Tenant Manager.
        type: string
        maxLength: 1024
        example: 'Email address: test@example.com'
      capabilities:
        title: Capabilities
        description: the high-level features enabled for this account, such as S3
          or Swift protocols (Accounts must have the "management" capability if users
          will sign into the Tenant Manager.)
        type: array
        items:
          type: string
          enum:
          - management
          - s3
          - swift
        example:
        - management
        - s3
      synchronizeRules:
        description: Rules that specify which tenant data and operations will be cloned
          to the other grids in a grid federation connection.
        type: object
        properties:
          createUser:
            title: createUser
            description: If true, also create user on the other grid using the grid
              federation connection.
            type: boolean
            example: true
          createGroup:
            title: createGroup
            description: If true, also create group on the other grid using the grid
              federation connection.
            type: boolean
            example: true
          createKey:
            title: createKey
            description: If true, also create key on the other grid using the grid
              federation connection.
            type: boolean
            example: false
      policy:
        description: settings for the tenant account
        "$ref": "#/definitions/policy-account"
  account:
    allOf:
    - "$ref": "#/definitions/account-no-id"
    - type: object
      required:
      - id
      - name
      properties:
        id:
          title: Account identifier
          description: a unique identifier for the account (automatically assigned
            when an account is created)
          type: string
          example: '12345678901234567890'
        accountReplica:
          title: Whether this tenant was created on another grid and replicated to
            this grid using grid federation.
          description: Automatically assigned when generating the response. Ignored
            in the PUT body. Present only if this tenant account has permission to
            use a grid federation connection. If true, this account on the local grid
            is a replica of an account created on another grid. If false, this account
            was created on the local grid and is not a copy.
          type: boolean
          example: false
  account-with-bucket-keys:
    allOf:
    - "$ref": "#/definitions/account"
    - type: object
      properties:
        s3Bucket:
          title: S3 bucket
          "$ref": "#/definitions/container-create"
        s3AccessKeys:
          title: S3 access keys
          "$ref": "#/definitions/s3-access-key-with-secrets"
  account-cached:
    allOf:
    - "$ref": "#/definitions/account"
    - type: object
      required:
      - dataBytes
      - objectCount
      properties:
        dataBytes:
          title: Data Bytes
          description: logical size in bytes of all objects under this Account
          type: integer
          example: 123456789
        objectCount:
          title: Object Count
          description: number of objects under this Account
          type: integer
          example: 123456789
  account-usage-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          title: Storage Tenant Account usage metrics
          type: object
          required:
          - calculationTime
          - objectCount
          - dataBytes
          properties:
            calculationTime:
              description: time when the usage data was calculated
              type: string
              format: date-time
            objectCount:
              description: number of objects under this Account
              type: integer
            dataBytes:
              description: logical size in bytes of all objects under this Account
              type: integer
            buckets:
              description: per-container usage metrics (including S3 buckets)
              type: array
              items:
                type: object
                title: Container usage metrics
                required:
                - name
                - objectCount
                - dataBytes
                properties:
                  name:
                    description: container name
                    type: string
                  objectCount:
                    description: number of objects in this container
                    type: integer
                  dataBytes:
                    description: logical size in bytes of all objects in this container
                    type: integer
                  consistency:
                    description: The consistency control affects the availability
                      of objects for client requests.
                    type: string
                    enum:
                    - all
                    - strong-global
                    - strong-site
                    - read-after-new-write
                    - available
                    example: available
                  encryption:
                    description: Encryption algorithm used to encrypt objects when
                      object are ingested into this bucket. If null, bucket objects
                      are not encrypted when ingested.
                    type: string
                    example: AES256
                  versioningEnabled:
                    description: versioningEnabled is true if bucket versioning is
                      currently enabled. It is false if versioning is suspended or
                      if versioning was never enabled.
                    type: boolean
                  versioningSuspended:
                    description: versioningSuspended is true if bucket versioning
                      is currently suspended. It is false if versioning is not suspended
                      or if versioning was never enabled.
                    type: boolean
                  region:
                    description: the region of this bucket
                    type: string
                    example: us-east-1
  change-password:
    title: Password change procedure request body
    type: object
    required:
    - password
    properties:
      password:
        description: User's new password
        maxLength: 32
        minLength: 8
        type: string
        example: my new password
      currentPassword:
        description: user's current password (The system will first validate that
          this matches the password in the database, providing an additional level
          of security. Vendor/root users do not need to provide the current password.)
        type: string
        maxLength: 32
        example: my old password
  list-accounts-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/account"
      required:
      - data
  list-accounts-cache-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/account-cached"
      required:
      - data
  create-account-response:
    allOf:
    - "$ref": "#/definitions/response"
    - "$ref": "#/definitions/alert-metadata-response"
    - properties:
        data:
          "$ref": "#/definitions/account-with-bucket-keys"
        metadata:
          properties:
            alerts:
              title: Metadata alerts related to account clone
              description: Messages reported when cloning a tenant account to a destination
                grid using a grid federation connection
              items:
                title: Alert message raised when cloning an account to the destination
                  grid
                properties:
                  severity:
                    example: warning
                  text:
                    example: The reason account clone failed.
                  key:
                    example: account.alert.replicate_account_failure
    - required:
      - data
  get-put-account-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/account"
      required:
      - data
  post-account-request:
    allOf:
    - "$ref": "#/definitions/account-no-id"
    - required:
      - name
      - synchronizeRules
      properties:
        password:
          description: Optional. The password for the root user of the tenant account.
            If a password-related failure occurs, the tenant account root user cannot
            sign in. The response includes a metadata alert with additional details.
          maxLength: 32
          minLength: 8
          type: string
          example: my password
        grantRootAccessToGroup:
          description: Optional. Specify the uniqueName of an existing federated Grid
            Admin group. This group will be assigned the Root Access permission for
            the new tenant. If a group-related failure occurs, users cannot sign in
            to the new tenant account. The response includes a metadata alert with
            additional details.
          type: string
          example: federated-group/developers
        s3Bucket:
          title: S3 bucket
          description: Optional. The details for an S3 bucket. When specified, an
            S3 bucket will be created in this tenant account.
          "$ref": "#/definitions/container-create"
        s3AccessKeys:
          title: S3 Access Keys
          description: Optional. The details for an S3 access key. When specified,
            a new access key ID and secret access key will be created for the tenant
            Root user.
          type: object
          properties:
            expires:
              "$ref": "#/definitions/s3-access-key-expires"
  s3-access-keys-request:
    properties:
      accessKey:
        description: The S3 access key ID to import.
        type: string
        example: AKIAIOSFODNN7EXAMPLE
      secretAccessKey:
        description: The S3 secret access key to import.
        type: string
        example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      expires:
        description: Optional. The time after which the key pair will no longer be
          valid. Null means the key pair never expires.
        type: string
        format: date-time
        example: '2028-09-04T00:00:00.000Z'
    required:
    - accessKey
    - secretAccessKey
  s3-access-keys-response:
    title: S3 access key
    description: S3 credential pair information
    type: object
    properties:
      id:
        title: S3 credential pair identifier
        description: A unique identifier for the S3 credential pair (automatically
          assigned when an access key is created)
        type: string
        example: abcABC_01234-0123456789abcABCabc0123456789==
      accountId:
        title: Account identifier
        description: Storage Tenant Account ID
        type: string
        example: '12345678901234567890'
      displayName:
        title: Display name
        description: Obfuscated access key
        type: string
        example: "****************AB12"
      userURN:
        title: User uniform resource name
        description: Contains the user name and account ID (generated automatically)
        type: string
        example: urn:sgws:identity::12345678901234567890:root
      userUUID:
        title: User universally unique ID
        description: ID that uniquely identifies the user (generated automatically)
        type: string
        example: 00000000-0000-0000-0000-000000000000
      expires:
        title: Key expiration time
        description: The time after which the key pair will no longer be valid. Null
          means the key pair never expires.
        type: string
        format: date-time
        example: '2025-01-01T00:00:00.000Z'
    required:
    - id
    - accountId
    - displayName
    - userUUID
  replication-metadata-alert:
    title: Alert message that indicates a remote replication failure
    type: object
    required:
    - text
    - key
    - severity
    properties:
      text:
        description: description of the alert
        type: string
        example: Reason why the tenant replication failed
      key:
        description: key for localizing the alert message
        type: string
        example: account.alert.replicate_account_failure
      severity:
        description: type of alert
        type: string
        enum:
        - info
        - warning
        - error
        example: warning
  replication-status-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/replication-status-and-error"
      required:
      - data
  replication-status-and-error:
    title: Replication status and error message
    type: object
    required:
    - connectionId
    - status
    - error
    properties:
      connectionId:
        description: ID of the connection
        type: string
        example: d57d0aab-e447-48ed-85e6-49ed89e29f7b
      status:
        description: status of the replication
        type: string
        example: successful
      error:
        description: error message related to replication failure
        type: string
        example: cannot connect to the other grid
  passphrase-post-request:
    type: object
    required:
    - passphrase
    properties:
      passphrase:
        title: Provisioning Passphrase
        description: the password used during maintenance procedures to make changes
          to the grid topology
        type: string
        example: provision1234
  log-collection-request:
    required:
    - passphrase
    - nodes
    - rangeStart
    - rangeEnd
    properties:
      passphrase:
        description: provisioning passphrase
        type: string
      nodes:
        description: list of target grid node UUIDs (To find a node ID (UUID), use
          the health/topology API. Alternatively, go to the Nodes page and select
          the node, or look in the /etc/node_id file.)
        type: array
        items:
          type: string
          example: 00000000-0000-0000-0000-000000000000
      notes:
        description: a message to send to technical support
        type: string
        maxLength: 1000
        example: Encountered an error message while expanding the grid.
      rangeStart:
        description: log collection start time
        type: string
        format: date-time
        example: '2017-01-01T00:00:00.000Z'
      rangeEnd:
        description: log collection end time
        type: string
        format: date-time
        example: '2017-01-01T01:00:00.000Z'
      applicationLogs:
        description: true to collect application logs, true if omitted
        type: boolean
        example: true
      auditLogs:
        description: true to collect audit logs, true if omitted
        type: boolean
        example: true
      networkTrace:
        description: true to collect sockets data, false if omitted
        type: boolean
        example: true
      prometheusDatabase:
        description: true to collect Prometheus database, false if omitted
        type: boolean
        example: true
  log-collection-status:
    required:
    - id
    - inProgress
    properties:
      id:
        title: procedure ID
        description: the name of the maintenance procedure
        type: string
        enum:
        - logs
      inProgress:
        title: In Progress
        description: true if a log collection procedure is in progress
        type: boolean
        example: true
      error:
        title: Error Message
        description: an error message if a problem has occurred, otherwise null
        type: string
        maxLength: 255
      startTime:
        title: Start Time
        description: the date and time when the log collection procedure was started
        type: string
        format: date-time
      endTime:
        title: End Time
        description: the date and time when the log collection procedure completed
        type: string
        format: date-time
      fileName:
        title: File Name
        description: the name of the log collection file, or null if not ready to
          download
        type: string
        example: 1234.tgz
      nodes:
        title: Node Status
        description: status of the log collection on each grid node
        type: array
        items:
          title: Single Node Status
          type: object
          required:
          - id
          - stage
          properties:
            id:
              title: Node UUID
              type: string
              example: 00000000-0000-0000-0000-000000000000
            stage:
              title: Stage
              description: log collection procedure stage
              type: string
              enum:
              - queued
              - collecting
              - done
              example: done
            error:
              title: Error Message
              description: an error message if a problem has occurred on this grid
                node, otherwise null
              type: string
              maxLength: 255
      notes:
        description: a message to send to technical support
        type: string
        maxLength: 1000
        example: Encountered an error message while expanding the grid.
      rangeStart:
        description: log collection start time
        type: string
        format: date-time
        example: '2017-01-01T00:00:00.000Z'
      rangeEnd:
        description: log collection end time
        type: string
        format: date-time
        example: '2017-01-01T01:00:00.000Z'
      percentage:
        title: Percentage
        description: the total progress percentage for the procedure
        type: integer
        example: 10
      user:
        title: Initiating User
        description: the user who initiated the log collection procedure
        type: object
        required:
        - username
        - fullName
        properties:
          username:
            title: Username
            description: the unique name of the user
            type: string
            example: user/Test
          fullName:
            title: Full Name
            description: the human-readable name for the user
            type: string
            example: Test User
  logs-alert:
    title: Alert message when retrieving current log collection status
    type: object
    required:
    - text
    - severity
    properties:
      text:
        description: description of the alert
        type: string
        example: Log collection is in progress.
      key:
        description: key for localizing the alert text
        type: string
        example: maintenance.logs.collection_in_progress
      developerMessage:
        description: additional information to aid in debugging
        type: string
      severity:
        description: type of alert
        type: string
        enum:
        - info
        - warning
        - error
        example: info
  logs-get-response:
    allOf:
    - "$ref": "#/definitions/response"
    - required:
      - data
      properties:
        readOnly:
          description: true if a log collection is in progress
          type: boolean
          default: false
        alerts:
          description: localized strings for display
          type: array
          items:
            "$ref": "#/definitions/logs-alert"
        data:
          "$ref": "#/definitions/log-collection-status"
  grid-network-list:
    title: Grid Network list
    description: the list of Grid Network subnets (in CIDR notation)
    type: array
    items:
      type: string
      example: 10.224.0.0/21
  grid-network-list-alert:
    title: Alert message in the response when retrieving the current Grid Network
      list
    type: object
    properties:
      severity:
        description: type of alert
        type: string
        enum:
        - info
        - warning
        - error
        example: info
      text:
        description: description of the alert
        type: string
        example: The update of the grid networks list is in progress
      key:
        description: key for localizing the alert text
        type: string
        example: maintenance.grid_networks.update_in_progress
  get-grid-network-list-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/grid-network-list"
          description: the list of Grid Network subnets (in CIDR notation)
        readOnly:
          description: true if the Grid Network list is currently being updated
          type: boolean
        alerts:
          description: 'Only present when the Grid Network list is currently being
            updated or when the last update failed.

            '
          type: array
          items:
            "$ref": "#/definitions/grid-network-list-alert"
      required:
      - data
  grid-network-list-update-request:
    required:
    - passphrase
    - subnets
    properties:
      passphrase:
        description: provisioning passphrase
        type: string
      subnets:
        "$ref": "#/definitions/grid-network-list"
        description: the new list of Grid Network subnets (in CIDR notation)
  get-dns-servers-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          description: the list of IP addresses of the external DNS servers
          items:
            "$ref": "#/definitions/dns-server"
      required:
      - data
  dns-server:
    type: string
    example: 10.96.191.87
  ec-profile:
    title: EC profile
    type: object
    properties:
      id:
        title: EC Profile ID
        description: a unique identifier for the Erasure Coding Profile (generated
          automatically)
        type: string
        example: '1'
      name:
        title: EC Profile Name
        description: the EC Profile's name
        type: string
        maxLength: 64
        example: EC profile 1
      poolId:
        title: Storage Pool ID
        description: the Storage Pool ID of the selected scheme
        type: string
        example: p1
      schemeId:
        title: Scheme ID
        description: the selected scheme for the EC profile
        type: string
        example: '1'
      active:
        title: Active Status
        description: whether the profile is active or deactivated
        type: boolean
        example: true
    required:
    - id
    - name
    - poolId
    - schemeId
    - active
  ec-scheme:
    title: EC scheme
    type: object
    properties:
      id:
        title: EC Scheme ID
        description: a unique identifier for the Erasure Coding Scheme (generated
          automatically)
        type: string
        example: '1'
      name:
        title: EC Scheme Name
        description: the EC Scheme's name
        type: string
        example: 6+3
      gridNodeRedundancy:
        title: Grid node redundancy
        description: the number of node outages that can be tolerated
        type: integer
        example: 3
      storageOverhead:
        title: Storage Overhead
        description: |
          the additional storage percent required to manage parity fragments
          for each erasure coded object
        type: integer
        example: 50
    required:
    - id
    - name
    - gridNodeRedundancy
    - storageOverhead
  ec-profile-list-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/ec-profile"
      required:
      - data
  ec-schemes-list-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/ec-scheme"
      required:
      - data
  identity-source:
    title: Identity Source
    description: An external LDAP server for authentication.
    type: object
    required:
    - id
    - ldapServiceType
    - hostname
    - port
    - username
    - password
    - baseGroupDn
    - baseUserDn
    properties:
      id:
        title: Identity Source identifier
        description: a unique identifier for the identity source (automatically assigned
          when the identity source is configured)
        type: string
        example: 00000000-0000-0000-0000-000000000000
      disable:
        title: disable
        description: whether the identity source will be used for authentication
        type: boolean
        default: true
      hostname:
        title: Hostname
        description: the server hostname or IP address of the identity source
        type: string
        example: 10.1.2.3
      port:
        title: Port
        description: the port to use to connect to the identity source
        type: integer
        example: 389
      username:
        title: Username
        description: the username to use to access the identity source
        type: string
        example: MYDOMAIN\Administrator
      password:
        title: Password
        description: the password to use to access the identity source
        type: string
        example: mypassword
      baseGroupDn:
        title: Group Base DN
        description: the fully qualified Distinguished Name (DN) of an LDAP subtree
          you want to search for groups
        type: string
        example: DC=example,DC=com
      baseUserDn:
        title: User Base DN
        description: the fully qualified Distinguished Name (DN) of an LDAP subtree
          you want to search for users
        type: string
        example: DC=example,DC=com
      bindUsernameFormat:
        title: Bind username format
        description: the default username pattern StorageGRID should use if the pattern
          cannot be determined automatically
        type: string
        example: "[USERNAME]@example.com"
        maxLength: 256
      ldapServiceType:
        title: LDAP service type
        description: type of the LDAP service
        type: string
        enum:
        - OpenLDAP
        - Active Directory
        - Azure
        - Other
      type:
        title: type
        description: type of the identity source
        type: string
        enum:
        - ldap
        default: ldap
      ldapUserIdAttribute:
        title: LDAP User ID Attribute
        description: LDAP attribute that identifies the LDAP user who attempts authentication
          with unique name/login (only required when ldapServiceType is "Other")
        type: string
        example: sAMAccountName
      ldapUserUUIDAttribute:
        title: LDAP User UUID Attribute
        description: LDAP attribute that identifies the LDAP user's permanent unique
          identity (only required when ldapServiceType is "Other")
        type: string
        example: objectGUID
      ldapGroupIdAttribute:
        title: LDAP Group ID Attribute
        description: LDAP attribute that identifies the LDAP group of the user who
          attempts authentication (only required when ldapServiceType is "Other")
        type: string
        example: sAMAccountName
      ldapGroupUUIDAttribute:
        title: LDAP Group UUID Attribute
        description: LDAP attribute that identifies the LDAP group's permanent unique
          identity (only required when ldapServiceType is "Other")
        type: string
        example: objectGUID
      disableTLS:
        title: Disable TLS
        description: whether Transport Layer Security (TLS) is used to connect to
          the identity source server
        type: boolean
        default: false
      enableLDAPS:
        title: Enable LDAPS
        description: whether to use LDAPS instead of STARTTLS to connect to the identity
          source server. STARTTLS is the default and is recommended.
        type: boolean
        default: false
      caCert:
        title: CA Certificate
        description: custom certificate to use to connect to the identity source server
          (if no custom certificate is supplied and TLS is enabled, the Operating
          System CA certificate will be used)
        type: string
        example: "-----BEGIN CERTIFICATE----- abcdefghijkl123456780ABCDEFGHIJKL 123456/7890ABCDEFabcdefghijklABCD
          -----END CERTIFICATE-----\n"
  identity-source-with-test-user:
    title: Identity Source with test user
    description: An external LDAP server for authentication.
    type: object
    allOf:
    - "$ref": "#/definitions/identity-source"
    - properties:
        testUsername:
          title: Test username
          description: the username of a federated user, which will be used to test
            the bind username format
          type: string
          example: username
          maxLength: 256
        testPassword:
          title: Test password
          description: the password for the test user
          type: string
          example: password
          maxLength: 256
  identity-source-get-put-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/identity-source"
      required:
      - data
  internal-ca-certificate-data:
    type: object
    properties:
      caCertificateEncoded:
        description: The public CA certificate for the StorageGRID system in Privacy-Enhanced
          Mail (PEM) format.
        type: string
        example: "<certificate in PEM-encoding>"
  internal-ca-certificate-get-response:
    type: object
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/internal-ca-certificate-data"
        metadata:
          description: Details of the internal CA certificate data
          "$ref": "#/definitions/internal-ca-certificate-metadata"
  internal-ca-certificate-metadata:
    type: object
    required:
    - caCertificateDetails
    properties:
      caCertificateDetails:
        description: Details of the internal CA certificate
        "$ref": "#/definitions/certificate-details"
  certificate-public-data:
    type: object
    properties:
      serverCertificateEncoded:
        description: X.509 server certificate in PEM-encoding; omit or null if using
          default certificates
        type: string
        example: "<certificate in PEM-encoding>"
      caBundleEncoded:
        description: intermediate CA certificate bundle in concatenated PEM-encoding;
          omit or null when there is no intermediate CA
        type: string
        example: "<intermediate CA certificates in concatenated PEM-encoding>"
  certificate-finger-prints:
    type: object
    required:
    - SHA-1
    - SHA-256
    properties:
      SHA-1:
        description: certificate fingerprint using the SHA-1 hash function
        type: string
        example: 1C:A5:5C:19:92:2D:BB:A7:CF:0B:CF:8E:05:90:B4:77:A0:3B:F3:4C
      SHA-256:
        description: certificate fingerprint using the SHA-256 hash function
        type: string
        example: 64:8A:31:B8:20:F2:25:45:C1:36:A3:C5:D2:2A:25:6C:53:87:0A:D9:52:89:E9:71:A3:C2:E4:40:8E:BC:FA:22
  certificate-details:
    type: object
    required:
    - subject
    - issuer
    - serialNumber
    - notBefore
    - notAfter
    - fingerPrints
    properties:
      subject:
        description: distinguished name of this certificate's entity
        type: string
        example: "/C=US/ST=California/L=Sunnyvale/O=Example Co./OU=IT/CN=dc1-adm1.sgws.example.com"
      issuer:
        description: distinguished name of the entity that signed and issued this
          certificate
        type: string
        example: "/CN=US/ST=California/L=Sunnyvale/O=AcmeSign/Inc./OU=IT/CN=AcmeSign
          Issuing CA"
      serialNumber:
        description: unique certificate serial number assigned by the CA
        type: string
        example: 14:38:7F:DC:CA:75:74:CF
      notBefore:
        description: start of validity period
        type: string
        example: 2015-01-01 00:00:00.000000000 Z
      notAfter:
        description: end of validity period
        type: string
        example: 2020-01-01 00:00:00.000000000 Z
      subjectAltNames:
        description: identities in addition to or in place of the identity in the
          subject field
        type: array
        items:
          type: string
          example: DNS:dc2-adm1.sgws.example.com
      fingerPrints:
        description: fingerprints of the certificate
        "$ref": "#/definitions/certificate-finger-prints"
  certificate-metadata:
    type: object
    required:
    - serverCertificateDetails
    properties:
      serverCertificateDetails:
        description: details of the server certificate
        "$ref": "#/definitions/certificate-details"
      caBundleDetails:
        description: details of the intermediate CA bundle
        type: array
        items:
          "$ref": "#/definitions/certificate-details"
  certificate-retrieve-response:
    type: object
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/certificate-public-data"
        metadata:
          description: details of data; omitted if using default certificates
          "$ref": "#/definitions/certificate-metadata"
  certificate-update-request:
    type: object
    allOf:
    - "$ref": "#/definitions/certificate-public-data"
    - properties:
        privateKeyEncoded:
          description: certificate private key in PEM-encoding; required if serverCertificateEncoded
            is not empty
          type: string
          example: "<private key in PEM-encoding>"
  change-passphrase-request:
    required:
    - passphrase
    - newPassphrase
    properties:
      passphrase:
        description: The current provisioning passphrase.
        type: string
      newPassphrase:
        description: The new provisioning passphrase.
        type: string
  node-console-passwords-post-request:
    type: object
    required:
    - passphrase
    properties:
      passphrase:
        title: Provisioning Passphrase
        description: The password used during maintenance procedures to make changes
          to the grid topology.
        type: string
        example: provision1234
  node-console-passwords-post-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        passwords:
          title: Grid Node Console Passwords
          description: The list of grid nodes and their associated console passwords.
          type: array
          items:
            "$ref": "#/definitions/node-console-passwords"
  node-console-passwords:
    title: Node Console Passwords
    description: Grid node attributes and console password.
    type: object
    required:
    - nodeId
    - nodeName
    - consolePassword
    properties:
      nodeId:
        title: Node ID
        description: The UUID of the grid node.
        type: string
        example: 00000000-0000-0000-0000-000000000000
      nodeName:
        title: Node Name
        description: The name of the grid node.
        type: string
        example: DC1-S4
      consolePassword:
        title: Console Password
        description: The console password for the grid node.
        type: string
        example: sshPassword134
      sshAccessPassword:
        title: SSH Access Password
        description: The SSH access password for the grid node. Null if the node does
          not have access to other nodes.
        type: string
        example: sshAccessPassword1234
  passphrase-get-alert:
    title: Passphrase Alert
    description: Alert message in the response when retrieving the current procedure
      status.
    type: object
    properties:
      severity:
        description: Type of alert.
        type: string
        enum:
        - info
        - warning
        - error
        example: info
      text:
        description: Description of the alert.
        type: string
        example: The update of the provisioning passphrase is in progress.
      key:
        description: Key for localizing the alert text.
        type: string
        example: maintenance.grid_passwords.change_passphrase_in_progress
  passphrase-get-response:
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        readOnly:
          description: True if the provisioning passphrase is currently being updated.
          type: boolean
        alerts:
          description: Present if the provisioning passphrase is currently being updated
            or if the last update failed.
          type: array
          items:
            "$ref": "#/definitions/passphrase-get-alert"
  traffic-class-limit:
    title: Traffic limit
    description: |-
      A limit specification for controlling client access and use.
      __Note:__ Each limit is applied on a per-node basis. Clients connecting to multiple load balancer nodes might be able to achieve a higher total rate, which is a multiple of the number of nodes that requests are being sent to.
    type: object
    required:
    - type
    - value
    properties:
      type:
        description: "The type of limit to apply.\n* `aggregateBandwidthIn` - The
          maximum combined upload bandwidth (for example, PUT requests) in bytes/second
          of all concurrent requests that match this policy. * `aggregateBandwidthOut`
          - The maximum combined download bandwidth (for example, GET requests) in
          bytes/second of all concurrent requests that match this policy. * `concurrentReadRequests`
          - The maximum number of download requests (for example, GET) that can be
          in progress at the same time. Idle connections do not count against this
          limit. * `concurrentWriteRequests` - The maximum number of upload requests
          (for example, PUT) that can be in progress at the same time. Idle connections
          do not count against this limit. * `readRequestRate` - The maximum number
          of download requests (for example, GET) that can be started each second.
          A burst of requests is allowed for policies that have been idle for some
          time. * `writeRequestRate` - The maximum number of download requests (for
          example, PUT) that can be started each second. A burst of requests is allowed
          for policies that have been idle for some time. * `perRequestBandwidthIn`
          - The maximum upload bandwidth (for example, PUT requests) in bytes/second
          allowed for each request that matches this policy. * `perRequestBandwidthOut`
          - The maximum download bandwidth (for example, GET requests) in bytes/second
          allowed for each request that matches this policy.\n__Warning:__ If aggregateBandwidth
          limits exist in any policy, load balancer performance might be degraded
          for all requests, including those that do not match any policy.\n__Note:__
          aggregateBandwidth and perRequestBandwidth types are mutually exclusive
          across all policies. "
        type: string
        example: writeRequestRate
        enum:
        - aggregateBandwidthIn
        - aggregateBandwidthOut
        - concurrentReadRequests
        - concurrentWriteRequests
        - readRequestRate
        - writeRequestRate
        - perRequestBandwidthIn
        - perRequestBandwidthOut
      value:
        description: The upper bounding value of the limit
        type: number
        example: 10000.0
  traffic-classes-policy:
    title: Traffic class
    description: Traffic classification policies provide ways to logically group sets
      of requests flowing through the load balancer service and optionally limit those
      requests.
    type: object
    required:
    - name
    properties:
      name:
        description: A name for the policy
        type: string
        example: Sample policy
        minLength: 1
        maxLength: 32
      description:
        description: A description of the policy
        type: string
        example: Limit requests to a pair of buckets
        maxLength: 128
      matchers:
        description: |-
          The set of parameters to match. The traffic class will match requests where _ANY_ of these matchers match.
          _Note:_ One of each matcher type can be specified.
        type: array
        maxItems: 5
        items:
          "$ref": "#/definitions/traffic-class-matcher"
      limits:
        description: |-
          Optional limits to impose on client requests matched by this traffic class.
          _Note:_ One of each matcher type can be specified.
        type: array
        maxItems: 6
        items:
          "$ref": "#/definitions/traffic-class-limit"
  traffic-classes-policy-readonly:
    title: Read-only parts of the traffic class policy
    type: object
    required:
    - id
    properties:
      id:
        type: string
        format: uuid
        example: 633a3028-486f-4e15-bb06-23474bafd4d6
  traffic-classes-policy-response-data:
    title: Traffic classification policy response
    type: object
    allOf:
    - "$ref": "#/definitions/traffic-classes-policy-readonly"
    - "$ref": "#/definitions/traffic-classes-policy"
  traffic-classes-policy-response:
    title: Traffic Classes Policy
    type: object
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/traffic-classes-policy-response-data"
      required:
      - data
  traffic-classes-id-name-map:
    type: object
    title: Name and identifier for policy
    required:
    - name
    - id
    properties:
      id:
        description: The unique policy identifier
        type: string
        format: uuid
        example: 633a3028-486f-4e15-bb06-23474bafd4d6
      name:
        description: The name of the policy
        type: string
        example: Sample policy
      description:
        description: A description of the policy
        type: string
        example: Limit requests to a pair of buckets
  traffic-classes-policy-names-response:
    title: All traffic classifier policy names
    description: A list of all traffic classifier policy names and their IDs
    type: object
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/traffic-classes-id-name-map"
      required:
      - data
  traffic-classes-info:
    type: object
    title: All traffic classifier policy names and IDs, and which bandwidth limits
      are in use
    required:
    - policies
    - aggregateInUse
    - perRequestInUse
    properties:
      policies:
        type: array
        items:
          "$ref": "#/definitions/traffic-classes-id-name-map"
      aggregateInUse:
        type: boolean
        description: True if any policies are using aggregate bandwidth limits
      perRequestInUse:
        type: boolean
        description: True if any policies are using per-request bandwidth limits
  traffic-classes-info-response:
    title: Policy names, identifiers, and which bandwidth limits are in use
    description: An object containing a list of all traffic classifier policy names
      and their IDs, and flags for which bandwidth limits are in use.
    type: object
    allOf:
    - "$ref": "#/definitions/response"
    - properties:
        data:
          "$ref": "#/definitions/traffic-classes-info"
      required:
      - data
  traffic-class-matcher:
    title: Traffic Class Matcher
    type: object
    required:
    - type
    - members
    properties:
      type:
        type: string
        description: "The attribute of the request to match.\n* `bucket` - The S3
          bucket (or Swift container) being accessed * `bucket-regex` - A regular
          expression to evaluate against the S3 bucket (or Swift container) being
          accessed * `cidr` - Matches if the client request source IP is in the specified
          IPv4 CIDR (RFC4632) * `endpoint` - The UUID of the load balancer endpoint
          which the client is connecting to * `tenant` - Matches if the S3 bucket
          (or Swift container) is owned by the tenant account with this ID "
        example: bucket
        enum:
        - bucket
        - bucket-regex
        - cidr
        - endpoint
        - tenant
      inverse:
        type: boolean
        default: false
        description: |-
          If true, the matcher will apply for all requests that do not match
          __Warning:__ Creating an inverse matcher with more than 1 member will likely match all requests. Use with caution.
      members:
        type: array
        description: A list of members to match on. The policy will match a request
          if _ANY_ of the elements listed match.
        maxItems: 100
        items:
          type: string
          description: Elements must be valid for the specified type
        example:
        - testbucket1
        - otherbucket
